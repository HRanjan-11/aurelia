{"version":3,"file":"index.js","sources":["../../src/name-convention.ts","../../src/preprocess-resource.ts","../../src/strip-meta-data.ts","../../src/preprocess-html-template.ts","../../src/options.ts","../../src/preprocess.ts"],"sourcesContent":["import { camelCase, kebabCase } from '@aurelia/kernel';\nimport { INameConvention, ResourceType } from './options.js';\n\nexport function nameConvention(className: string): INameConvention {\n  const m = /^(.+?)(CustomElement|CustomAttribute|ValueConverter|BindingBehavior|BindingCommand|TemplateController)?$/.exec(className);\n  if (!m) {\n    throw new Error(`No convention found for class name ${className}`);\n  }\n\n  const bareName = m[1];\n  const type = (m[2] ? camelCase(m[2]) : 'customElement') as ResourceType;\n\n  return {\n    name: normalizedName(bareName, type),\n    type\n  };\n}\n\nfunction normalizedName(name: string, type: ResourceType) {\n  if (type === 'valueConverter' || type === 'bindingBehavior') {\n    return camelCase(name);\n  }\n  return kebabCase(name);\n}\n","import * as path from 'path';\nimport { kebabCase } from '@aurelia/kernel';\nimport modifyCode, { ModifyCodeResult } from 'modify-code';\nimport * as ts from 'typescript';\nimport { nameConvention } from './name-convention.js';\nimport { IFileUnit, IPreprocessOptions, ResourceType } from './options.js';\n\ninterface ICapturedImport {\n  names: string[];\n  start: number;\n  end: number;\n}\n\ninterface IPos {\n  pos: number;\n  end: number;\n}\n\ninterface IFoundResource {\n  localDep?: string;\n  needDecorator?: [number, string];\n  implicitStatement?: IPos;\n  runtimeImportName?: string;\n  customName?: IPos;\n}\n\ninterface IFoundDecorator {\n  type: ResourceType;\n  expression: ts.CallExpression;\n}\n\ninterface IModifyResourceOptions {\n  expectedResourceName: string;\n  runtimeImport: ICapturedImport;\n  implicitElement?: IPos;\n  localDeps: string[];\n  conventionalDecorators: [number, string][];\n  customElementName?: IPos;\n}\n\nexport function preprocessResource(unit: IFileUnit, options: IPreprocessOptions): ModifyCodeResult {\n  const basename = path.basename(unit.path, path.extname(unit.path));\n  const expectedResourceName = kebabCase(basename);\n  const sf = ts.createSourceFile(unit.path, unit.contents, ts.ScriptTarget.Latest);\n\n  let auImport: ICapturedImport = { names: [], start: 0, end: 0 };\n  let runtimeImport: ICapturedImport = { names: [], start: 0, end: 0 };\n\n  let implicitElement: IPos | undefined;\n  let customElementName: IPos | undefined; // for @customName('custom-name')\n\n  // When there are multiple exported classes (e.g. local value converters),\n  // they might be deps for composing the main implicit custom element.\n  const localDeps: string[] = [];\n  const conventionalDecorators: [number, string][] = [];\n\n  sf.statements.forEach(s => {\n    // Find existing import Aurelia, {customElement, templateController} from 'aurelia';\n    const au = captureImport(s, 'aurelia', unit.contents);\n    if (au) {\n      // Assumes only one import statement for @aurelia/runtime-html\n      auImport = au;\n      return;\n    }\n\n    // Find existing import {customElement} from '@aurelia/runtime-html';\n    const runtime = captureImport(s, '@aurelia/runtime-html', unit.contents);\n    if (runtime) {\n      // Assumes only one import statement for @aurelia/runtime-html\n      runtimeImport = runtime;\n      return;\n    }\n\n    // Only care about export class Foo {...}.\n    // Note this convention simply doesn't work for\n    //   class Foo {}\n    //   export {Foo};\n    const resource = findResource(s, expectedResourceName, unit.filePair, unit.contents);\n    if (!resource) return;\n    const {\n      localDep,\n      needDecorator,\n      implicitStatement,\n      runtimeImportName,\n      customName\n    } = resource;\n\n    if (localDep) localDeps.push(localDep);\n    if (needDecorator) conventionalDecorators.push(needDecorator);\n    if (implicitStatement) implicitElement = implicitStatement;\n    if (runtimeImportName && !auImport.names.includes(runtimeImportName)) {\n      ensureTypeIsExported(runtimeImport.names, runtimeImportName);\n    }\n    if (customName) customElementName = customName;\n  });\n\n  return modifyResource(unit, {\n    expectedResourceName,\n    runtimeImport,\n    implicitElement,\n    localDeps,\n    conventionalDecorators,\n    customElementName\n  });\n}\n\nfunction modifyResource(unit: IFileUnit, options: IModifyResourceOptions) {\n  const {\n    expectedResourceName,\n    runtimeImport,\n    implicitElement,\n    localDeps,\n    conventionalDecorators,\n    customElementName\n  } = options;\n\n  const m = modifyCode(unit.contents, unit.path);\n  if (implicitElement && unit.filePair) {\n    // @view() for foo.js and foo-view.html\n    // @customElement() for foo.js and foo.html\n    const dec = kebabCase(unit.filePair).startsWith(`${expectedResourceName}-view`) ? 'view' : 'customElement';\n\n    const viewDef = '__au2ViewDef';\n    m.prepend(`import * as ${viewDef} from './${unit.filePair}';\\n`);\n\n    if (localDeps.length) {\n      // When in-file deps are used, move the body of custom element to end of the file,\n      // in order to avoid TS2449: Class '...' used before its declaration.\n      const elementStatement = unit.contents.slice(implicitElement.pos, implicitElement.end);\n      m.replace(implicitElement.pos, implicitElement.end, '');\n\n      if (customElementName) {\n        const name = unit.contents.slice(customElementName.pos, customElementName.end);\n        // Overwrite element name\n        m.append(`\\n${elementStatement.substring(0, customElementName.pos - implicitElement.pos)}{ ...${viewDef}, name: ${name}, dependencies: [ ...${viewDef}.dependencies, ${localDeps.join(', ')} ] }${elementStatement.substring(customElementName.end - implicitElement.pos)}\\n`);\n      } else {\n        m.append(`\\n@${dec}({ ...${viewDef}, dependencies: [ ...${viewDef}.dependencies, ${localDeps.join(', ')} ] })\\n${elementStatement}\\n`);\n      }\n    } else {\n      if (customElementName) {\n        // Overwrite element name\n        const name = unit.contents.slice(customElementName.pos, customElementName.end);\n        m.replace(customElementName.pos, customElementName.end,`{ ...${viewDef}, name: ${name} }`);\n      } else {\n        conventionalDecorators.push([implicitElement.pos, `@${dec}(${viewDef})\\n`]);\n      }\n    }\n  }\n\n  if (conventionalDecorators.length) {\n    if (runtimeImport.names.length) {\n      let runtimeImportStatement = `import { ${runtimeImport.names.join(', ')} } from '@aurelia/runtime-html';`;\n      if (runtimeImport.end === runtimeImport.start) runtimeImportStatement += '\\n';\n      m.replace(runtimeImport.start, runtimeImport.end, runtimeImportStatement);\n    }\n\n    conventionalDecorators.forEach(([pos, str]) => m.insert(pos, str));\n  }\n\n  return m.transform();\n}\n\nfunction captureImport(s: ts.Statement, lib: string, code: string): ICapturedImport | void {\n  if (ts.isImportDeclaration(s) &&\n      ts.isStringLiteral(s.moduleSpecifier) &&\n      s.moduleSpecifier.text === lib &&\n      s.importClause &&\n      s.importClause.namedBindings &&\n      ts.isNamedImports(s.importClause.namedBindings)) {\n    return {\n      names: s.importClause.namedBindings.elements.map(e => e.name.text),\n      start: ensureTokenStart(s.pos, code),\n      end: s.end\n    };\n  }\n}\n\n// This method mutates runtimeExports.\nfunction ensureTypeIsExported(runtimeExports: string[], type: string) {\n  if (!runtimeExports.includes(type)) {\n    runtimeExports.push(type);\n  }\n}\n\n// TypeScript parsed statement could contain leading white spaces.\n// This find the exact starting position for latter code injection.\nfunction ensureTokenStart(start: number, code: string) {\n  while (start < code.length - 1 && /^\\s$/.exec(code[start])) start++;\n  return start;\n}\n\nfunction isExported(node: ts.Node): boolean {\n  if (!node.modifiers) return false;\n  for (const mod of node.modifiers) {\n    if (mod.kind === ts.SyntaxKind.ExportKeyword) return true;\n  }\n  return false;\n}\n\nconst KNOWN_DECORATORS = ['view', 'customElement', 'customAttribute', 'valueConverter', 'bindingBehavior', 'bindingCommand', 'templateController'];\n\nfunction findDecoratedResourceType(node: ts.Node): IFoundDecorator | void {\n  if (!node.decorators) return;\n  for (const d of node.decorators) {\n    if (!ts.isCallExpression(d.expression)) return;\n    const exp = d.expression.expression;\n    if (ts.isIdentifier(exp)) {\n      const name = exp.text;\n      if (KNOWN_DECORATORS.includes(name)) {\n        return {\n          type: name as ResourceType,\n          expression: d.expression\n        };\n      }\n    }\n  }\n}\n\nfunction isKindOfSame(name1: string, name2: string): boolean {\n  return name1.replace(/-/g, '') === name2.replace(/-/g, '');\n}\n\nfunction findResource(node: ts.Node, expectedResourceName: string, filePair: string | undefined, code: string): IFoundResource | void {\n  if (!ts.isClassDeclaration(node)) return;\n  if (!node.name) return;\n  if (!isExported(node)) return;\n  const pos = ensureTokenStart(node.pos, code);\n\n  const className = node.name.text;\n  const {name, type} = nameConvention(className);\n  const isImplicitResource = isKindOfSame(name, expectedResourceName);\n  const foundType = findDecoratedResourceType(node);\n\n  if (foundType) {\n    // Explicitly decorated resource\n    if (\n      !isImplicitResource &&\n      foundType.type !== 'customElement' &&\n      foundType.type !== 'view'\n    ) {\n      return { localDep: className };\n    }\n\n    if (\n      isImplicitResource &&\n      foundType.type === 'customElement' &&\n      foundType.expression.arguments.length === 1 &&\n      ts.isStringLiteral(foundType.expression.arguments[0])\n    ) {\n      // @customElement('custom-name')\n      const customName = foundType.expression.arguments[0] as ts.StringLiteral;\n      return {\n        implicitStatement: { pos: pos, end: node.end },\n        customName: { pos: ensureTokenStart(customName.pos, code), end: customName.end }\n      };\n    }\n  } else {\n    if (type === 'customElement') {\n      // Custom element can only be implicit resource\n      if (isImplicitResource && filePair) {\n        return {\n          implicitStatement: { pos: pos, end: node.end },\n          runtimeImportName: kebabCase(filePair).startsWith(`${expectedResourceName}-view`) ? 'view' : 'customElement'\n        };\n      }\n    } else {\n      const result: IFoundResource = {\n        needDecorator: [pos, `@${type}('${name}')\\n`],\n        localDep: className,\n      };\n\n      result.runtimeImportName = type;\n\n      return result;\n    }\n  }\n}\n","import { kebabCase } from '@aurelia/kernel';\nimport { BindingMode } from '@aurelia/runtime';\nimport { PartialBindableDefinition } from '@aurelia/runtime-html';\nimport { DefaultTreeElement, ElementLocation, parseFragment } from 'parse5';\n\ninterface IStrippedHtml {\n  html: string;\n  deps: string[];\n  shadowMode: 'open' | 'closed' | null;\n  containerless: boolean;\n  hasSlot: boolean;\n  bindables: Record<string, PartialBindableDefinition>;\n  aliases: string[];\n}\n\nexport function stripMetaData(rawHtml: string): IStrippedHtml {\n  const deps: string[] = [];\n  let shadowMode: 'open' | 'closed' | null = null;\n  let containerless: boolean = false;\n  let hasSlot: boolean = false;\n  const bindables: Record<string, PartialBindableDefinition> = {};\n  const aliases: string[] = [];\n  const toRemove: [number, number][] = [];\n  const tree = parseFragment(rawHtml, { sourceCodeLocationInfo: true });\n\n  traverse(tree, node => {\n    stripImport(node, (dep, ranges) => {\n      if (dep) deps.push(dep);\n      toRemove.push(...ranges);\n    });\n\n    stripUseShadowDom(node, (mode, ranges) => {\n      if (mode) shadowMode = mode;\n      toRemove.push(...ranges);\n    });\n\n    stripContainerlesss(node, ranges => {\n      containerless = true;\n      toRemove.push(...ranges);\n    });\n\n    stripBindable(node, (bs, ranges) => {\n      Object.assign(bindables, bs);\n      toRemove.push(...ranges);\n    });\n\n    stripAlias(node, (aliasArray, ranges) => {\n      aliases.push(...aliasArray);\n      toRemove.push(...ranges);\n    });\n\n    if (node.tagName === 'slot') {\n      hasSlot = true;\n    }\n  });\n\n  let html = '';\n  let lastIdx = 0;\n  toRemove.sort((a, b) => a[0] - b[0]).forEach(([start, end]) => {\n    html += rawHtml.slice(lastIdx, start);\n    lastIdx = end;\n  });\n  html += rawHtml.slice(lastIdx);\n\n  return { html, deps, shadowMode, containerless, hasSlot, bindables, aliases };\n}\n\nfunction traverse(tree: any, cb: (node: DefaultTreeElement) => void) {\n  tree.childNodes.forEach((n: any) => {\n    const ne = n as DefaultTreeElement;\n    // skip <template as-custom-element=\"..\">\n    if (ne.tagName === 'template' && ne.attrs.some(attr => attr.name === 'as-custom-element')) {\n      return;\n    }\n    cb(ne);\n    if (n.childNodes) traverse(n, cb);\n    // For <template> tag\n    if (n.content && n.content.childNodes) traverse(n.content, cb);\n  });\n}\n\nfunction stripTag(node: DefaultTreeElement, tagNames: string[] | string, cb: (attrs: Record<string, string>, ranges: [number, number][]) => void): boolean {\n  if (!Array.isArray(tagNames)) tagNames = [tagNames];\n  if (tagNames.includes(node.tagName)) {\n    const attrs: Record<string, string> = {};\n    node.attrs.forEach(attr => attrs[attr.name] = attr.value);\n    const loc = node.sourceCodeLocation as ElementLocation;\n    const toRemove: [number, number][] = [];\n    if (loc.endTag) {\n      toRemove.push([loc.endTag.startOffset, loc.endTag.endOffset]);\n    }\n    toRemove.push([loc.startTag.startOffset, loc.startTag.endOffset]);\n    cb(attrs, toRemove);\n    return true;\n  }\n  return false;\n}\n\nfunction stripAttribute(node: DefaultTreeElement, tagName: string, attributeName: string, cb: (value: string, range: [number, number][]) => void): boolean {\n  if (node.tagName === tagName) {\n    const attr = node.attrs.find(a => a.name === attributeName);\n    if (attr) {\n      const loc = node.sourceCodeLocation as ElementLocation;\n\n      cb(attr.value, [[loc.attrs[attributeName].startOffset, loc.attrs[attributeName].endOffset]]);\n      return true;\n    }\n  }\n  return false;\n}\n\n// <import from=\"./foo\">\n// <require from=\"./foo\">\n// <import from=\"./foo\"></import>\n// <require from=\"./foo\"></require>\nfunction stripImport(node: DefaultTreeElement, cb: (dep: string | undefined, ranges: [number, number][]) => void) {\n  return stripTag(node, ['import', 'require'], (attrs, ranges) => {\n    cb(attrs.from, ranges);\n  });\n}\n\n// <use-shadow-dom>\n// <use-shadow-dom></use-shadow-dom>\n// <use-shadow-dom mode=\"open\">\n// <use-shadow-dom mode=\"closed\"></use-shadow-dom>\n// <template use-shadow-dom>\n// <template use-shadow-dom=\"open\">\nfunction stripUseShadowDom(node: DefaultTreeElement, cb: (mode: 'open' | 'closed', ranges: [number, number][]) => void) {\n  let mode: 'open' | 'closed' = 'open';\n\n  return stripTag(node, 'use-shadow-dom', (attrs, ranges) => {\n    if (attrs.mode === 'closed') mode = 'closed';\n    cb(mode, ranges);\n  }) || stripAttribute(node, 'template', 'use-shadow-dom', (value, ranges) => {\n    if (value === 'closed') mode = 'closed';\n    cb(mode, ranges);\n  });\n}\n\n// <containerless>\n// <containerless></containerless>\n// <template containerless>\nfunction stripContainerlesss(node: DefaultTreeElement, cb: (ranges: [number, number][]) => void) {\n  return stripTag(node, 'containerless', (attrs, ranges) => {\n    cb(ranges);\n  }) || stripAttribute(node, 'template', 'containerless', (value, ranges) => {\n    cb(ranges);\n  });\n}\n\n// <alias name=\"firstName\">\n// <alias name=\"firstName, lastName></alias>\n// <template alias=\"firstName\">\n// <template alias=\"firstName,lastName\">\nfunction stripAlias(node: DefaultTreeElement, cb: (bindables: string[], ranges: [number, number][]) => void) {\n  return stripTag(node, 'alias', (attrs, ranges) => {\n    const { name } = attrs;\n    let aliases: string[] = [];\n    if (name) {\n      aliases = name.split(',').map(s => s.trim()).filter(s => s);\n    }\n    cb(aliases, ranges);\n  }) || stripAttribute(node, 'template', 'alias', (value, ranges) => {\n    const aliases: string[] = value.split(',').map(s => s.trim()).filter(s => s);\n    cb(aliases, ranges);\n  });\n}\n\n// <bindable name=\"firstName\">\n// <bindable name=\"lastName\" attribute=\"surname\" mode=\"two-way\"></bindable>\n// <bindable name=\"lastName\" attribute=\"surname\" mode=\"TwoWay\"></bindable>\n// <template bindable=\"firstName\">\n// <template bindable=\"firstName,lastName\">\n// <template bindable=\"firstName,\n//                     lastName\">\nfunction stripBindable(node: DefaultTreeElement, cb: (bindables: Record<string, PartialBindableDefinition>, ranges: [number, number][]) => void) {\n  return stripTag(node, 'bindable', (attrs, ranges) => {\n    const { name, mode, attribute } = attrs;\n    const bindables: Record<string, PartialBindableDefinition> = {};\n    if (name) {\n      const description: PartialBindableDefinition = {};\n      if (attribute) description.attribute = attribute;\n      const bindingMode = toBindingMode(mode);\n      if (bindingMode) description.mode = bindingMode;\n      bindables[name] = description;\n    }\n    cb(bindables, ranges);\n  }) || stripAttribute(node, 'template', 'bindable', (value, ranges) => {\n    const bindables: Record<string, PartialBindableDefinition> = {};\n    const names = value.split(',').map(s => s.trim()).filter(s => s);\n    names.forEach(name => bindables[name] = {});\n    cb(bindables, ranges);\n  });\n}\n\nfunction toBindingMode(mode?: string): BindingMode | undefined {\n  if (mode) {\n    const normalizedMode = kebabCase(mode);\n    if (normalizedMode === 'one-time') return BindingMode.oneTime;\n    if (normalizedMode === 'one-way' || normalizedMode === 'to-view') return BindingMode.toView;\n    if (normalizedMode === 'from-view') return BindingMode.fromView;\n    if (normalizedMode === 'two-way') return BindingMode.twoWay;\n  }\n}\n","import * as path from 'path';\nimport { kebabCase } from '@aurelia/kernel';\nimport modifyCode, { ModifyCodeResult } from 'modify-code';\nimport { IFileUnit, IPreprocessOptions } from './options.js';\nimport { stripMetaData } from './strip-meta-data.js';\n\n// stringModuleWrap is to deal with pure css text module import in shadowDOM mode.\n// For webpack:\n//   import d0 from '!!raw-loader!./foo.css';\n// For dumber/requirejs:\n//   import d0 from 'text!./foo.css';\n// We cannot use\n//   import d0 from './foo.css';\n// because most bundler by default will inject that css into HTML head.\nexport function preprocessHtmlTemplate(unit: IFileUnit, options: IPreprocessOptions): ModifyCodeResult {\n  const name = kebabCase(path.basename(unit.path, path.extname(unit.path)));\n  const stripped = stripMetaData(unit.contents);\n  const { html, deps, containerless, hasSlot, bindables, aliases } = stripped;\n  let { shadowMode } = stripped;\n\n  if (unit.filePair) {\n    const basename = path.basename(unit.filePair, path.extname(unit.filePair));\n    if (!deps.some(dep => options.cssExtensions.some(e => dep === `./${basename}${e}`))) {\n      // implicit dep ./foo.css for foo.html\n      deps.unshift(`./${unit.filePair}`);\n    }\n  }\n\n  if (options.defaultShadowOptions && shadowMode === null) {\n    shadowMode = options.defaultShadowOptions.mode;\n  }\n\n  const useCSSModule = shadowMode !== null ? false : options.useCSSModule;\n\n  const viewDeps: string[] = [];\n  const cssDeps: string[] = [];\n  const statements: string[] = [];\n  let registrationImported = false;\n\n  // Turn off ShadowDOM for invalid element\n  if (!name.includes('-') && shadowMode !== null) {\n    shadowMode = null;\n    const error = `WARN: ShadowDOM is disabled for ${unit.path}. ShadowDOM requires element name to contain at least one dash (-), you have to refactor <${name}> to something like <lorem-${name}>.`;\n    console.warn(error);\n    statements.push(`console.warn(${JSON.stringify(error)});\\n`);\n  }\n\n  if (shadowMode === null && hasSlot) {\n    throw new Error(`<slot> cannot be used in ${unit.path}. <slot> is only available when using ShadowDOM. Please turn on ShadowDOM, or use <au-slot> in non-ShadowDOM mode. https://docs.aurelia.io/app-basics/components-revisited#au-slot`);\n  }\n\n  deps.forEach((d, i) => {\n    const ext = path.extname(d);\n    // All known resource types\n    if (!ext || ext === '.js' || ext === '.ts' || options.templateExtensions.includes(ext)) {\n      statements.push(`import * as d${i} from ${s(d)};\\n`);\n      viewDeps.push(`d${i}`);\n      return;\n    }\n\n    // CSS resource\n    if (options.cssExtensions.includes(ext)) {\n      if (shadowMode !== null) {\n        const stringModuleId = options.stringModuleWrap ? options.stringModuleWrap(d) : d;\n        statements.push(`import d${i} from ${s(stringModuleId)};\\n`);\n        cssDeps.push(`d${i}`);\n      } else if (useCSSModule) {\n        statements.push(`import d${i} from ${s(d)};\\n`);\n        cssDeps.push(`d${i}`);\n      } else {\n        // Rely on bundler to inject CSS.\n        statements.push(`import ${s(d)};\\n`);\n      }\n      return;\n    }\n\n    // Wrap all other unknown resources in defer.\n    if (!registrationImported) {\n      statements.push(`import { Registration } from '@aurelia/kernel';\\n`);\n      registrationImported = true;\n    }\n    statements.push(`import d${i} from ${s(d)};\\n`);\n    viewDeps.push(`Registration.defer('${ext}', d${i})`);\n  });\n\n  const m = modifyCode('', unit.path);\n  m.append(`import { CustomElement } from '@aurelia/runtime-html';\\n`);\n  if (cssDeps.length > 0) {\n    if (shadowMode !== null) {\n      m.append(`import { shadowCSS } from '@aurelia/runtime-html';\\n`);\n      viewDeps.push(`shadowCSS(${cssDeps.join(', ')})`);\n    } else if (useCSSModule) {\n      m.append(`import { cssModules } from '@aurelia/runtime-html';\\n`);\n      viewDeps.push(`cssModules(${cssDeps.join(', ')})`);\n    }\n  }\n  statements.forEach(st => m.append(st));\n  m.append(`export const name = ${s(name)};\nexport const template = ${s(html)};\nexport default template;\nexport const dependencies = [ ${viewDeps.join(', ')} ];\n`);\n\n  if (shadowMode !== null) {\n    m.append(`export const shadowOptions = { mode: '${shadowMode}' };\\n`);\n  }\n\n  if (containerless) {\n    m.append(`export const containerless = true;\\n`);\n  }\n\n  if (Object.keys(bindables).length > 0) {\n    m.append(`export const bindables = ${JSON.stringify(bindables)};\\n`);\n  }\n\n  if (aliases.length > 0) {\n    m.append(`export const aliases = ${JSON.stringify(aliases)};\\n`);\n  }\n\n  m.append(`let _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies${shadowMode !== null ? ', shadowOptions' : ''}${containerless ? ', containerless' : ''}${Object.keys(bindables).length > 0 ? ', bindables' : ''}${aliases.length > 0 ? ', aliases' : ''} });\n  }\n  container.register(_e);\n}\n`);\n  const { code, map } = m.transform();\n  map.sourcesContent = [unit.contents];\n  return { code, map };\n}\n\nfunction s(str: string) {\n  return JSON.stringify(str);\n}\n","export type ResourceType = 'view' | 'customElement' | 'customAttribute' | 'valueConverter' | 'bindingBehavior' | 'bindingCommand' | 'templateController';\n\nexport interface INameConvention {\n  name: string;\n  type: ResourceType;\n}\n\nexport interface IFileUnit {\n  // The path is used in sourceMap.\n  path: string;\n  // The base path that file path is related to. Used for checking existence of the pair html.\n  // We separated file path and base because file path will be written into source map.\n  base?: string;\n  contents: string;\n  // For foo.js or foo.ts, this is foo.html or foo.md or foo.haml or foo.pug\n  // For foo.html (or other templates), this is foo.css or foo.scss or foo.sass or foo.less or foo.styl\n  filePair?: string;\n}\n\nexport interface IOptionalPreprocessOptions {\n  defaultShadowOptions?: { mode: 'open' | 'closed' };\n  // More details in ./preprocess-html-template.ts\n  stringModuleWrap?: ((id: string) => string);\n  cssExtensions?: string[]; // .css, .scss, .sass, .less, .styl\n  jsExtensions?: string[]; // .js, .jsx, .ts, .tsx, .coffee\n  templateExtensions?: string[]; // .html, .md, .pug, .haml, .jade, .slim, .slm\n  // When foo.js is paired by foo.md,\n  // when foo.md is paried by foo.scss,\n  // most bundlers require import original filename foo.md and foo.scss\n  // instead of foo.html and foo.css.\n  // But some bundlers (dumber) require import processed filename foo.html\n  // and foo.css.\n  useProcessedFilePairFilename?: boolean;\n  // Whenn CSSModule is in use, stringModuleWrap is ignored.\n  useCSSModule?: boolean;\n}\n\nexport interface IPreprocessOptions {\n  defaultShadowOptions?: { mode: 'open' | 'closed' };\n  // More details in ./preprocess-html-template.ts\n  stringModuleWrap?: ((id: string) => string);\n  cssExtensions: string[]; // .css, .scss, .sass, .less, .styl\n  jsExtensions: string[]; // .js, .jsx, .ts, .tsx, .coffee\n  templateExtensions: string[]; // .html, .md, .pug, .haml, .jade, .slim, .slm\n  useProcessedFilePairFilename?: boolean;\n  useCSSModule: boolean;\n}\n\nexport const defaultCssExtensions = ['.css', '.scss', '.sass', '.less', '.styl'];\nexport const defaultJsExtensions = ['.js', '.jsx', '.ts', '.tsx', '.coffee'];\nexport const defaultTemplateExtensions = ['.html', '.md', '.pug', '.haml', '.jade', '.slim', '.slm'];\n\nexport function preprocessOptions(options: IOptionalPreprocessOptions = {}): IPreprocessOptions {\n  const {\n    cssExtensions = [],\n    jsExtensions = [],\n    templateExtensions = [],\n    useCSSModule = false,\n    ...others\n  } = options;\n\n  return {\n    cssExtensions: Array.from(new Set([...defaultCssExtensions, ...cssExtensions])).sort(),\n    jsExtensions: Array.from(new Set([...defaultJsExtensions, ...jsExtensions])).sort(),\n    templateExtensions: Array.from(new Set([...defaultTemplateExtensions, ...templateExtensions])).sort(),\n    useCSSModule,\n    ...others\n  };\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport { ModifyCodeResult } from 'modify-code';\nimport { IFileUnit, IOptionalPreprocessOptions, preprocessOptions } from './options.js';\nimport { preprocessHtmlTemplate } from './preprocess-html-template.js';\nimport { preprocessResource } from './preprocess-resource.js';\n\nexport function preprocess(\n  unit: IFileUnit,\n  options: IOptionalPreprocessOptions,\n  _fileExists = fileExists\n): ModifyCodeResult | undefined {\n  const ext = path.extname(unit.path);\n  const basename = path.basename(unit.path, ext);\n  const allOptions = preprocessOptions(options);\n  const base = unit.base || '';\n\n  if (allOptions.templateExtensions.includes(ext)) {\n    const possibleFilePair = allOptions.cssExtensions.map(e =>\n      path.join(base, unit.path.slice(0, - ext.length) + e)\n    );\n    const filePair = possibleFilePair.find(_fileExists);\n    if (filePair) {\n      if (allOptions.useProcessedFilePairFilename) {\n        unit.filePair = `${basename}.css`;\n      } else {\n        unit.filePair = path.basename(filePair);\n      }\n    }\n    return preprocessHtmlTemplate(unit, allOptions);\n  } else if (allOptions.jsExtensions.includes(ext)) {\n    const possibleFilePair = allOptions.templateExtensions.map(e =>\n      path.join(base, unit.path.slice(0, - ext.length) + e)\n    );\n    const filePair = possibleFilePair.find(_fileExists);\n    if (filePair) {\n      if (allOptions.useProcessedFilePairFilename) {\n        unit.filePair = `${basename}.html`;\n      } else {\n        unit.filePair = path.basename(filePair);\n      }\n    } else {\n      // Try foo.js and foo-view.html convention.\n      // This convention is handled by @view(), not @customElement().\n      const possibleViewPair = allOptions.templateExtensions.map(e =>\n        path.join(base, `${unit.path.slice(0, - ext.length)  }-view${e}`)\n      );\n      const viewPair = possibleViewPair.find(_fileExists);\n      if (viewPair) {\n        if (allOptions.useProcessedFilePairFilename) {\n          unit.filePair = `${basename}-view.html`;\n        } else {\n          unit.filePair = path.basename(viewPair);\n        }\n      }\n    }\n    return preprocessResource(unit, allOptions);\n  }\n}\n\nfunction fileExists(p: string): boolean {\n  try {\n    const stats = fs.statSync(p);\n    return stats.isFile();\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}