{"version":3,"file":"index.js","sources":["../../src/name-convention.ts","../../src/resource-name.ts","../../src/hmr.ts","../../src/preprocess-resource.ts","../../src/strip-meta-data.ts","../../src/preprocess-html-template.ts","../../src/options.ts","../../src/preprocess.ts"],"sourcesContent":["import { camelCase, kebabCase } from '@aurelia/kernel';\nimport { INameConvention, ResourceType } from './options.js';\n\nexport function nameConvention(className: string): INameConvention {\n  const m = /^(.+?)(CustomElement|CustomAttribute|ValueConverter|BindingBehavior|BindingCommand|TemplateController)?$/.exec(className);\n  if (!m) {\n    throw new Error(`No convention found for class name ${className}`);\n  }\n\n  const bareName = m[1];\n  const type = (m[2] ? camelCase(m[2]) : 'customElement') as ResourceType;\n\n  return {\n    name: normalizedName(bareName, type),\n    type\n  };\n}\n\nfunction normalizedName(name: string, type: ResourceType) {\n  if (type === 'valueConverter' || type === 'bindingBehavior') {\n    return camelCase(name);\n  }\n  return kebabCase(name);\n}\n","import * as path from 'path';\nimport { kebabCase } from '@aurelia/kernel';\n\n// a/foo-bar.xxx -> \"foo-bar\"\n// a/fooBar.xxx -> \"foo-bar\"\n// a/foo-bar/index.xxx -> \"foo-bar\"\n// a/fooBar/index.xxx -> \"foo-bar\"\nexport function resourceName(filePath: string): string {\n  const parsed = path.parse(filePath);\n  const name = parsed.name === 'index' ? path.basename(parsed.dir) : parsed.name;\n  return kebabCase(name);\n}\n","/**\n * This is the minimum required runtime modules for HMR\n */\nexport const hmrRuntimeModules = ['CustomElement', 'LifecycleFlags', 'IHydrationContext', 'Controller'];\n\n/**\n * This is the minimum required metadata modules for HMR\n */\nexport const hmrMetadataModules = ['Metadata'];\n\n/**\n * This gets the generated HMR code for the specified class\n *\n * @param className - The name of the class to generate HMR code for\n * @param moduleText -  Usually module but Vite uses import instead\n * @param type - CustomElement | CustomAttribute\n * @returns Generated HMR code\n */\nexport const getHmrCode = (className: string, moduleText: string = 'module', type: 'CustomElementHtml' | 'CustomElement' | 'CustomAttribute' = 'CustomElement'): string => {\n\n  const code = `\n    const controllers = [];\n    if ((${moduleText} as any).hot) {\n    (${moduleText} as any).hot.accept();\n    const hot = (${moduleText} as any).hot;\n    let aurelia = hot.data?.aurelia;\n    document.addEventListener('au-started', (event) => {aurelia= (event as any).detail; });\n    const currentClassType = ${className};\n    const proto = (${className} as any).prototype\n    const ogCreated = proto ? proto.created : undefined;\n\n    if(proto){\n      proto.created = (controller) => {\n        ogCreated && ogCreated(controller);\n        controllers.push(controller);\n      }\n    }\n\n    hot.dispose(function (data) {\n      data.controllers = controllers;\n      data.aurelia = aurelia;\n    });\n\n    if (hot.data?.aurelia) {\n      const newDefinition = CustomElement.getDefinition(currentClassType);\n      Metadata.define(newDefinition.name, newDefinition, currentClassType);\n      Metadata.define(newDefinition.name, newDefinition, newDefinition);\n      (hot.data.aurelia.container as any).res[CustomElement.keyFrom(newDefinition.name)] = newDefinition;\n\n\n      (hot.data.controllers as any).forEach(controller => {\n        const values = { ...controller.viewModel };\n        const hydrationContext = controller.container.get(IHydrationContext)\n        const hydrationInst = hydrationContext.instruction;\n\n        Object.keys(values).forEach(key => {\n          if (!controller.bindings?.some(y => (y as any).sourceExpression?.name === key && (y as any).targetProperty)) {\n            delete values[key];\n          }\n        });\n        const h = (controller as any).host;\n        delete (controller as any)._compiledDef;\n        (controller.viewModel as any) = new currentClassType();\n        (controller.definition as any) = newDefinition;\n        Object.assign(controller.viewModel, values);\n        (controller.hooks as any) = new (controller.hooks as any).constructor(controller.viewModel);\n        (controller as any)._hydrateCustomElement(hydrationInst, hydrationContext);\n        h.parentNode.replaceChild((controller as any).host, h);\n        (controller as any).hostController = null;\n        (controller as any).deactivate(controller, controller.parent ?? null, LifecycleFlags.none);\n        (controller as any).activate(controller, controller.parent ?? null, LifecycleFlags.none);\n      });\n    }\n  }`;\n\n  return type === 'CustomElementHtml' ? code.replace(/ as any/g, '') : code;\n};\n","import modifyCode, { ModifyCodeResult } from 'modify-code';\nimport * as ts from 'typescript';\nimport { getHmrCode, hmrMetadataModules, hmrRuntimeModules } from './hmr.js';\nimport { nameConvention } from './name-convention.js';\nimport { IFileUnit, IPreprocessOptions, ResourceType } from './options.js';\nimport { resourceName } from './resource-name.js';\n\ninterface ICapturedImport {\n  names: string[];\n  start: number;\n  end: number;\n}\n\ninterface IPos {\n  pos: number;\n  end: number;\n}\n\ninterface IFoundResource {\n  className?: string;\n  localDep?: string;\n  needDecorator?: [number, string];\n  implicitStatement?: IPos;\n  runtimeImportName?: string;\n  customName?: IPos;\n}\n\ninterface IFoundDecorator {\n  type: ResourceType;\n  expression: ts.CallExpression;\n}\n\ninterface IModifyResourceOptions {\n  exportedClassName?: string;\n  metadataImport: ICapturedImport;\n  runtimeImport: ICapturedImport;\n  implicitElement?: IPos;\n  localDeps: string[];\n  conventionalDecorators: [number, string][];\n  customElementName?: IPos;\n}\n\nexport function preprocessResource(unit: IFileUnit, options: IPreprocessOptions): ModifyCodeResult {\n  const expectedResourceName = resourceName(unit.path);\n  const sf = ts.createSourceFile(unit.path, unit.contents, ts.ScriptTarget.Latest);\n  let exportedClassName: string | undefined;\n  let auImport: ICapturedImport = { names: [], start: 0, end: 0 };\n  let runtimeImport: ICapturedImport = { names: [], start: 0, end: 0 };\n  let metadataImport: ICapturedImport = { names: [], start: 0, end: 0 };\n\n  let implicitElement: IPos | undefined;\n  let customElementName: IPos | undefined; // for @customName('custom-name')\n\n  // When there are multiple exported classes (e.g. local value converters),\n  // they might be deps for composing the main implicit custom element.\n  const localDeps: string[] = [];\n  const conventionalDecorators: [number, string][] = [];\n\n  sf.statements.forEach(s => {\n    // Find existing import Aurelia, {customElement, templateController} from 'aurelia';\n    const au = captureImport(s, 'aurelia', unit.contents);\n    if (au) {\n      // Assumes only one import statement for @aurelia/runtime-html\n      auImport = au;\n      return;\n    }\n\n    // Find existing import {Metadata} from '@aurelia/metadata';\n    const metadata = captureImport(s, '@aurelia/metadata', unit.contents);\n    if (metadata) {\n      // Assumes only one import statement for @aurelia/runtime-html\n      metadataImport = metadata;\n      return;\n    }\n\n    // Find existing import {customElement} from '@aurelia/runtime-html';\n    const runtime = captureImport(s, '@aurelia/runtime-html', unit.contents);\n    if (runtime) {\n      // Assumes only one import statement for @aurelia/runtime-html\n      runtimeImport = runtime;\n      return;\n    }\n\n    // Only care about export class Foo {...}.\n    // Note this convention simply doesn't work for\n    //   class Foo {}\n    //   export {Foo};\n    const resource = findResource(s, expectedResourceName, unit.filePair, unit.isViewPair, unit.contents);\n    if (!resource) return;\n    const {\n      className,\n      localDep,\n      needDecorator,\n      implicitStatement,\n      runtimeImportName,\n      customName\n    } = resource;\n\n    if (localDep) localDeps.push(localDep);\n    if (needDecorator) conventionalDecorators.push(needDecorator);\n    if (implicitStatement) implicitElement = implicitStatement;\n    if (runtimeImportName && !auImport.names.includes(runtimeImportName)) {\n      ensureTypeIsExported(runtimeImport.names, runtimeImportName);\n    }\n    if (className && options.hmr && process.env.NODE_ENV !== 'production') {\n      exportedClassName = className;\n      hmrRuntimeModules.forEach(m => {\n        if (!auImport.names.includes(m)) {\n          ensureTypeIsExported(runtimeImport.names, m);\n        }\n      });\n      hmrMetadataModules.forEach(m => {\n        if (!auImport.names.includes(m)) {\n          ensureTypeIsExported(metadataImport.names, m);\n        }\n      });\n    }\n    if (customName) customElementName = customName;\n  });\n\n  let m = modifyCode(unit.contents, unit.path);\n  const hmrEnabled = options.hmr && exportedClassName && process.env.NODE_ENV !== 'production';\n\n  if (options.enableConventions || hmrEnabled) {\n    if (hmrEnabled && metadataImport.names.length) {\n      let metadataImportStatement = `import { ${metadataImport.names.join(', ')} } from '@aurelia/metadata';`;\n      if (metadataImport.end === metadataImport.start)\n        metadataImportStatement += '\\n';\n      m.replace(metadataImport.start, metadataImport.end, metadataImportStatement);\n    }\n\n    if (runtimeImport.names.length) {\n      let runtimeImportStatement = `import { ${runtimeImport.names.join(', ')} } from '@aurelia/runtime-html';`;\n      if (runtimeImport.end === runtimeImport.start) runtimeImportStatement += '\\n';\n      m.replace(runtimeImport.start, runtimeImport.end, runtimeImportStatement);\n    }\n  }\n\n  if (options.enableConventions) {\n    m = modifyResource(unit, m, {\n      runtimeImport,\n      metadataImport,\n      exportedClassName,\n      implicitElement,\n      localDeps,\n      conventionalDecorators,\n      customElementName\n    });\n  }\n\n  if (options.hmr && exportedClassName && process.env.NODE_ENV !== 'production') {\n    const hmr = getHmrCode(exportedClassName, options.hmrModule);\n    m.append(hmr);\n  }\n\n  return m.transform();\n}\n\nfunction modifyResource(unit: IFileUnit, m: ReturnType<typeof modifyCode>, options: IModifyResourceOptions) {\n  const {\n    implicitElement,\n    localDeps,\n    conventionalDecorators,\n    customElementName\n  } = options;\n\n  if (implicitElement && unit.filePair) {\n    // @view() for foo.js and foo-view.html\n    // @customElement() for foo.js and foo.html\n    const dec = unit.isViewPair ? 'view' : 'customElement';\n\n    const viewDef = '__au2ViewDef';\n    m.prepend(`import * as ${viewDef} from './${unit.filePair}';\\n`);\n\n    if (localDeps.length) {\n      // When in-file deps are used, move the body of custom element to end of the file,\n      // in order to avoid TS2449: Class '...' used before its declaration.\n      const elementStatement = unit.contents.slice(implicitElement.pos, implicitElement.end);\n      m.replace(implicitElement.pos, implicitElement.end, '');\n\n      if (customElementName) {\n        const name = unit.contents.slice(customElementName.pos, customElementName.end);\n        // Overwrite element name\n        m.append(`\\n${elementStatement.substring(0, customElementName.pos - implicitElement.pos)}{ ...${viewDef}, name: ${name}, dependencies: [ ...${viewDef}.dependencies, ${localDeps.join(', ')} ] }${elementStatement.substring(customElementName.end - implicitElement.pos)}\\n`);\n      } else {\n        m.append(`\\n@${dec}({ ...${viewDef}, dependencies: [ ...${viewDef}.dependencies, ${localDeps.join(', ')} ] })\\n${elementStatement}\\n`);\n      }\n    } else {\n      if (customElementName) {\n        // Overwrite element name\n        const name = unit.contents.slice(customElementName.pos, customElementName.end);\n        m.replace(customElementName.pos, customElementName.end, `{ ...${viewDef}, name: ${name} }`);\n      } else {\n        conventionalDecorators.push([implicitElement.pos, `@${dec}(${viewDef})\\n`]);\n      }\n    }\n  }\n\n  if (conventionalDecorators.length) {\n    conventionalDecorators.forEach(([pos, str]) => m.insert(pos, str));\n  }\n\n  return m;\n}\n\nfunction captureImport(s: ts.Statement, lib: string, code: string): ICapturedImport | void {\n  if (ts.isImportDeclaration(s) &&\n    ts.isStringLiteral(s.moduleSpecifier) &&\n    s.moduleSpecifier.text === lib &&\n    s.importClause &&\n    s.importClause.namedBindings &&\n    ts.isNamedImports(s.importClause.namedBindings)) {\n    return {\n      names: s.importClause.namedBindings.elements.map(e => e.name.text),\n      start: ensureTokenStart(s.pos, code),\n      end: s.end\n    };\n  }\n}\n\n// This method mutates runtimeExports.\nfunction ensureTypeIsExported(runtimeExports: string[], type: string) {\n  if (!runtimeExports.includes(type)) {\n    runtimeExports.push(type);\n  }\n}\n\n// TypeScript parsed statement could contain leading white spaces.\n// This find the exact starting position for latter code injection.\nfunction ensureTokenStart(start: number, code: string) {\n  while (start < code.length - 1 && /^\\s$/.exec(code[start])) start++;\n  return start;\n}\n\nfunction isExported(node: ts.Node): boolean {\n  if (!node.modifiers) return false;\n  for (const mod of node.modifiers) {\n    if (mod.kind === ts.SyntaxKind.ExportKeyword) return true;\n  }\n  return false;\n}\n\nconst KNOWN_DECORATORS = ['view', 'customElement', 'customAttribute', 'valueConverter', 'bindingBehavior', 'bindingCommand', 'templateController'];\n\nfunction findDecoratedResourceType(node: ts.Node): IFoundDecorator | void {\n  if (!node.decorators) return;\n  for (const d of node.decorators) {\n    if (!ts.isCallExpression(d.expression)) return;\n    const exp = d.expression.expression;\n    if (ts.isIdentifier(exp)) {\n      const name = exp.text;\n      if (KNOWN_DECORATORS.includes(name)) {\n        return {\n          type: name as ResourceType,\n          expression: d.expression\n        };\n      }\n    }\n  }\n}\n\nfunction isKindOfSame(name1: string, name2: string): boolean {\n  return name1.replace(/-/g, '') === name2.replace(/-/g, '');\n}\n\nfunction findResource(node: ts.Node, expectedResourceName: string, filePair: string | undefined, isViewPair: boolean | undefined, code: string): IFoundResource | void {\n  if (!ts.isClassDeclaration(node)) return;\n  if (!node.name) return;\n  if (!isExported(node)) return;\n  const pos = ensureTokenStart(node.pos, code);\n\n  const className = node.name.text;\n  const { name, type } = nameConvention(className);\n  const isImplicitResource = isKindOfSame(name, expectedResourceName);\n  const foundType = findDecoratedResourceType(node);\n\n  if (foundType) {\n    // Explicitly decorated resource\n    if (\n      !isImplicitResource &&\n      foundType.type !== 'customElement' &&\n      foundType.type !== 'view'\n    ) {\n      return {\n        className,\n        localDep: className\n      };\n    }\n\n    if (\n      isImplicitResource &&\n      foundType.type === 'customElement' &&\n      foundType.expression.arguments.length === 1 &&\n      ts.isStringLiteral(foundType.expression.arguments[0])\n    ) {\n      // @customElement('custom-name')\n      const customName = foundType.expression.arguments[0] as ts.StringLiteral;\n      return {\n        className,\n        implicitStatement: { pos: pos, end: node.end },\n        customName: { pos: ensureTokenStart(customName.pos, code), end: customName.end }\n      };\n    }\n\n    return {\n      className,\n    };\n\n  } else {\n    if (type === 'customElement') {\n      // Custom element can only be implicit resource\n      if (isImplicitResource && filePair) {\n        return {\n          className,\n          implicitStatement: { pos: pos, end: node.end },\n          runtimeImportName: isViewPair ? 'view' : 'customElement'\n        };\n      }\n    } else {\n      const result: IFoundResource = {\n        className,\n        needDecorator: [pos, `@${type}('${name}')\\n`],\n        localDep: className,\n      };\n\n      result.runtimeImportName = type;\n\n      return result;\n    }\n  }\n}\n","import { kebabCase } from '@aurelia/kernel';\nimport { BindingMode } from '@aurelia/runtime';\nimport { PartialBindableDefinition } from '@aurelia/runtime-html';\nimport { DefaultTreeElement, ElementLocation, parseFragment } from 'parse5';\n\ninterface IStrippedHtml {\n  html: string;\n  deps: string[];\n  shadowMode: 'open' | 'closed' | null;\n  containerless: boolean;\n  hasSlot: boolean;\n  bindables: Record<string, PartialBindableDefinition>;\n  aliases: string[];\n}\n\nexport function stripMetaData(rawHtml: string): IStrippedHtml {\n  const deps: string[] = [];\n  let shadowMode: 'open' | 'closed' | null = null;\n  let containerless: boolean = false;\n  let hasSlot: boolean = false;\n  const bindables: Record<string, PartialBindableDefinition> = {};\n  const aliases: string[] = [];\n  const toRemove: [number, number][] = [];\n  const tree = parseFragment(rawHtml, { sourceCodeLocationInfo: true });\n\n  traverse(tree, node => {\n    stripImport(node, (dep, ranges) => {\n      if (dep) deps.push(dep);\n      toRemove.push(...ranges);\n    });\n\n    stripUseShadowDom(node, (mode, ranges) => {\n      if (mode) shadowMode = mode;\n      toRemove.push(...ranges);\n    });\n\n    stripContainerlesss(node, ranges => {\n      containerless = true;\n      toRemove.push(...ranges);\n    });\n\n    stripBindable(node, (bs, ranges) => {\n      Object.assign(bindables, bs);\n      toRemove.push(...ranges);\n    });\n\n    stripAlias(node, (aliasArray, ranges) => {\n      aliases.push(...aliasArray);\n      toRemove.push(...ranges);\n    });\n\n    if (node.tagName === 'slot') {\n      hasSlot = true;\n    }\n  });\n\n  let html = '';\n  let lastIdx = 0;\n  toRemove.sort((a, b) => a[0] - b[0]).forEach(([start, end]) => {\n    html += rawHtml.slice(lastIdx, start);\n    lastIdx = end;\n  });\n  html += rawHtml.slice(lastIdx);\n\n  return { html, deps, shadowMode, containerless, hasSlot, bindables, aliases };\n}\n\nfunction traverse(tree: any, cb: (node: DefaultTreeElement) => void) {\n  tree.childNodes.forEach((n: any) => {\n    const ne = n as DefaultTreeElement;\n    // skip <template as-custom-element=\"..\">\n    if (ne.tagName === 'template' && ne.attrs.some(attr => attr.name === 'as-custom-element')) {\n      return;\n    }\n    cb(ne);\n    if (n.childNodes) traverse(n, cb);\n    // For <template> tag\n    if (n.content && n.content.childNodes) traverse(n.content, cb);\n  });\n}\n\nfunction stripTag(node: DefaultTreeElement, tagNames: string[] | string, cb: (attrs: Record<string, string>, ranges: [number, number][]) => void): boolean {\n  if (!Array.isArray(tagNames)) tagNames = [tagNames];\n  if (tagNames.includes(node.tagName)) {\n    const attrs: Record<string, string> = {};\n    node.attrs.forEach(attr => attrs[attr.name] = attr.value);\n    const loc = node.sourceCodeLocation as ElementLocation;\n    const toRemove: [number, number][] = [];\n    if (loc.endTag) {\n      toRemove.push([loc.endTag.startOffset, loc.endTag.endOffset]);\n    }\n    toRemove.push([loc.startTag.startOffset, loc.startTag.endOffset]);\n    cb(attrs, toRemove);\n    return true;\n  }\n  return false;\n}\n\nfunction stripAttribute(node: DefaultTreeElement, tagName: string, attributeName: string, cb: (value: string, range: [number, number][]) => void): boolean {\n  if (node.tagName === tagName) {\n    const attr = node.attrs.find(a => a.name === attributeName);\n    if (attr) {\n      const loc = node.sourceCodeLocation as ElementLocation;\n\n      cb(attr.value, [[loc.attrs[attributeName].startOffset, loc.attrs[attributeName].endOffset]]);\n      return true;\n    }\n  }\n  return false;\n}\n\n// <import from=\"./foo\">\n// <require from=\"./foo\">\n// <import from=\"./foo\"></import>\n// <require from=\"./foo\"></require>\nfunction stripImport(node: DefaultTreeElement, cb: (dep: string | undefined, ranges: [number, number][]) => void) {\n  return stripTag(node, ['import', 'require'], (attrs, ranges) => {\n    cb(attrs.from, ranges);\n  });\n}\n\n// <use-shadow-dom>\n// <use-shadow-dom></use-shadow-dom>\n// <use-shadow-dom mode=\"open\">\n// <use-shadow-dom mode=\"closed\"></use-shadow-dom>\n// <template use-shadow-dom>\n// <template use-shadow-dom=\"open\">\nfunction stripUseShadowDom(node: DefaultTreeElement, cb: (mode: 'open' | 'closed', ranges: [number, number][]) => void) {\n  let mode: 'open' | 'closed' = 'open';\n\n  return stripTag(node, 'use-shadow-dom', (attrs, ranges) => {\n    if (attrs.mode === 'closed') mode = 'closed';\n    cb(mode, ranges);\n  }) || stripAttribute(node, 'template', 'use-shadow-dom', (value, ranges) => {\n    if (value === 'closed') mode = 'closed';\n    cb(mode, ranges);\n  });\n}\n\n// <containerless>\n// <containerless></containerless>\n// <template containerless>\nfunction stripContainerlesss(node: DefaultTreeElement, cb: (ranges: [number, number][]) => void) {\n  return stripTag(node, 'containerless', (attrs, ranges) => {\n    cb(ranges);\n  }) || stripAttribute(node, 'template', 'containerless', (value, ranges) => {\n    cb(ranges);\n  });\n}\n\n// <alias name=\"firstName\">\n// <alias name=\"firstName, lastName></alias>\n// <template alias=\"firstName\">\n// <template alias=\"firstName,lastName\">\nfunction stripAlias(node: DefaultTreeElement, cb: (bindables: string[], ranges: [number, number][]) => void) {\n  return stripTag(node, 'alias', (attrs, ranges) => {\n    const { name } = attrs;\n    let aliases: string[] = [];\n    if (name) {\n      aliases = name.split(',').map(s => s.trim()).filter(s => s);\n    }\n    cb(aliases, ranges);\n  }) || stripAttribute(node, 'template', 'alias', (value, ranges) => {\n    const aliases: string[] = value.split(',').map(s => s.trim()).filter(s => s);\n    cb(aliases, ranges);\n  });\n}\n\n// <bindable name=\"firstName\">\n// <bindable name=\"lastName\" attribute=\"surname\" mode=\"two-way\"></bindable>\n// <bindable name=\"lastName\" attribute=\"surname\" mode=\"TwoWay\"></bindable>\n// <template bindable=\"firstName\">\n// <template bindable=\"firstName,lastName\">\n// <template bindable=\"firstName,\n//                     lastName\">\nfunction stripBindable(node: DefaultTreeElement, cb: (bindables: Record<string, PartialBindableDefinition>, ranges: [number, number][]) => void) {\n  return stripTag(node, 'bindable', (attrs, ranges) => {\n    const { name, mode, attribute } = attrs;\n    const bindables: Record<string, PartialBindableDefinition> = {};\n    if (name) {\n      const description: PartialBindableDefinition = {};\n      if (attribute) description.attribute = attribute;\n      const bindingMode = toBindingMode(mode);\n      if (bindingMode) description.mode = bindingMode;\n      bindables[name] = description;\n    }\n    cb(bindables, ranges);\n  }) || stripAttribute(node, 'template', 'bindable', (value, ranges) => {\n    const bindables: Record<string, PartialBindableDefinition> = {};\n    const names = value.split(',').map(s => s.trim()).filter(s => s);\n    names.forEach(name => bindables[name] = {});\n    cb(bindables, ranges);\n  });\n}\n\nfunction toBindingMode(mode?: string): BindingMode | undefined {\n  if (mode) {\n    const normalizedMode = kebabCase(mode);\n    if (normalizedMode === 'one-time') return BindingMode.oneTime;\n    if (normalizedMode === 'one-way' || normalizedMode === 'to-view') return BindingMode.toView;\n    if (normalizedMode === 'from-view') return BindingMode.fromView;\n    if (normalizedMode === 'two-way') return BindingMode.twoWay;\n  }\n}\n","import { getHmrCode, hmrMetadataModules, hmrRuntimeModules } from './hmr';\nimport * as path from 'path';\nimport modifyCode, { ModifyCodeResult } from 'modify-code';\nimport { IFileUnit, IPreprocessOptions } from './options.js';\nimport { stripMetaData } from './strip-meta-data.js';\nimport { resourceName } from './resource-name.js';\n\n// stringModuleWrap is to deal with pure css text module import in shadowDOM mode.\n// For webpack:\n//   import d0 from '!!raw-loader!./foo.css';\n// For dumber/requirejs:\n//   import d0 from 'text!./foo.css';\n// We cannot use\n//   import d0 from './foo.css';\n// because most bundler by default will inject that css into HTML head.\nexport function preprocessHtmlTemplate(unit: IFileUnit, options: IPreprocessOptions, hasViewModel?: boolean): ModifyCodeResult {\n  const name = resourceName(unit.path);\n  const stripped = stripMetaData(unit.contents);\n  const { html, deps, containerless, hasSlot, bindables, aliases } = stripped;\n  let { shadowMode } = stripped;\n\n  if (unit.filePair) {\n    const basename = path.basename(unit.filePair, path.extname(unit.filePair));\n    if (!deps.some(dep => options.cssExtensions.some(e => dep === `./${basename}${e}`))) {\n      // implicit dep ./foo.css for foo.html\n      deps.unshift(`./${unit.filePair}`);\n    }\n  }\n\n  if (options.defaultShadowOptions && shadowMode === null) {\n    shadowMode = options.defaultShadowOptions.mode;\n  }\n\n  const useCSSModule = shadowMode !== null ? false : options.useCSSModule;\n\n  const viewDeps: string[] = [];\n  const cssDeps: string[] = [];\n  const statements: string[] = [];\n  let registrationImported = false;\n\n  // Turn off ShadowDOM for invalid element\n  if (!name.includes('-') && shadowMode !== null) {\n    shadowMode = null;\n    const error = `WARN: ShadowDOM is disabled for ${unit.path}. ShadowDOM requires element name to contain at least one dash (-), you have to refactor <${name}> to something like <lorem-${name}>.`;\n    console.warn(error);\n    statements.push(`console.warn(${JSON.stringify(error)});\\n`);\n  }\n\n  if (shadowMode === null && hasSlot) {\n    throw new Error(`<slot> cannot be used in ${unit.path}. <slot> is only available when using ShadowDOM. Please turn on ShadowDOM, or use <au-slot> in non-ShadowDOM mode. https://docs.aurelia.io/app-basics/components-revisited#au-slot`);\n  }\n\n  deps.forEach((d, i) => {\n    const ext = path.extname(d);\n    // All known resource types\n    if (!ext || ext === '.js' || ext === '.ts' || options.templateExtensions.includes(ext)) {\n      statements.push(`import * as d${i} from ${s(d)};\\n`);\n      viewDeps.push(`d${i}`);\n      return;\n    }\n\n    // CSS resource\n    if (options.cssExtensions.includes(ext)) {\n      if (shadowMode !== null) {\n        const stringModuleId = options.stringModuleWrap ? options.stringModuleWrap(d) : d;\n        statements.push(`import d${i} from ${s(stringModuleId)};\\n`);\n        cssDeps.push(`d${i}`);\n      } else if (useCSSModule) {\n        statements.push(`import d${i} from ${s(d)};\\n`);\n        cssDeps.push(`d${i}`);\n      } else {\n        // Rely on bundler to inject CSS.\n        statements.push(`import ${s(d)};\\n`);\n      }\n      return;\n    }\n\n    // Wrap all other unknown resources in defer.\n    if (!registrationImported) {\n      statements.push(`import { Registration } from '@aurelia/kernel';\\n`);\n      registrationImported = true;\n    }\n    statements.push(`import d${i} from ${s(d)};\\n`);\n    viewDeps.push(`Registration.defer('${ext}', d${i})`);\n  });\n\n  const m = modifyCode('', unit.path);\n  const hmrEnabled = !hasViewModel && options.hmr && process.env.NODE_ENV !== 'production';\n  if (hmrEnabled) {\n    m.append(`import { ${hmrRuntimeModules.join(', ')} } from '@aurelia/runtime-html';\\n`);\n    m.append(`import { ${hmrMetadataModules.join(', ')} } from '@aurelia/metadata';\\n`);\n  } else {\n    m.append(`import { CustomElement } from '@aurelia/runtime-html';\\n`);\n  }\n  if (cssDeps.length > 0) {\n    if (shadowMode !== null) {\n      m.append(`import { shadowCSS } from '@aurelia/runtime-html';\\n`);\n      viewDeps.push(`shadowCSS(${cssDeps.join(', ')})`);\n    } else if (useCSSModule) {\n      m.append(`import { cssModules } from '@aurelia/runtime-html';\\n`);\n      viewDeps.push(`cssModules(${cssDeps.join(', ')})`);\n    }\n  }\n  statements.forEach(st => m.append(st));\n  m.append(`export const name = ${s(name)};\nexport const template = ${s(html)};\nexport default template;\nexport const dependencies = [ ${viewDeps.join(', ')} ];\n`);\n\n  if (shadowMode !== null) {\n    m.append(`export const shadowOptions = { mode: '${shadowMode}' };\\n`);\n  }\n\n  if (containerless) {\n    m.append(`export const containerless = true;\\n`);\n  }\n\n  if (Object.keys(bindables).length > 0) {\n    m.append(`export const bindables = ${JSON.stringify(bindables)};\\n`);\n  }\n\n  if (aliases.length > 0) {\n    m.append(`export const aliases = ${JSON.stringify(aliases)};\\n`);\n  }\n\n  if (hmrEnabled) {\n    m.append(`const _e = CustomElement.define({ name, template, dependencies${shadowMode !== null ? ', shadowOptions' : ''}${containerless ? ', containerless' : ''}${Object.keys(bindables).length > 0 ? ', bindables' : ''}${aliases.length > 0 ? ', aliases' : ''} });\n      export function register(container) {\n        container.register(_e);\n      }`);\n  } else {\n    m.append(`let _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies${shadowMode !== null ? ', shadowOptions' : ''}${containerless ? ', containerless' : ''}${Object.keys(bindables).length > 0 ? ', bindables' : ''}${aliases.length > 0 ? ', aliases' : ''} });\n  }\n  container.register(_e);\n}\n`);\n  }\n\n  if (hmrEnabled) {\n    m.append(getHmrCode('_e', options.hmrModule, 'CustomElementHtml'));\n  }\n\n  const { code, map } = m.transform();\n  map.sourcesContent = [unit.contents];\n  return { code, map };\n}\n\nfunction s(str: string) {\n  return JSON.stringify(str);\n}\n\n","export type ResourceType = 'view' | 'customElement' | 'customAttribute' | 'valueConverter' | 'bindingBehavior' | 'bindingCommand' | 'templateController';\n\nexport interface INameConvention {\n  name: string;\n  type: ResourceType;\n}\n\nexport interface IFileUnit {\n  // The path is used in sourceMap.\n  path: string;\n  // The base path that file path is related to. Used for checking existence of the pair html.\n  // We separated file path and base because file path will be written into source map.\n  base?: string;\n  contents: string;\n  // For foo.js or foo.ts, this is foo.html or foo.md or foo.haml or foo.pug\n  // For foo.html (or other templates), this is foo.css or foo.scss or foo.sass or foo.less or foo.styl\n  filePair?: string;\n  // When filePair is foo-bar.html for foo-bar.js, it's not a view pair. Uses @customElement decorator.\n  // When filePair is foo-bar-view.html for foo-bar.js, it's a view pair. Uses @view decorator.\n  isViewPair?: boolean;\n}\n\nexport interface IOptionalPreprocessOptions {\n  defaultShadowOptions?: { mode: 'open' | 'closed' };\n  // More details in ./preprocess-html-template.ts\n  stringModuleWrap?: ((id: string) => string);\n  cssExtensions?: string[]; // .css, .scss, .sass, .less, .styl\n  jsExtensions?: string[]; // .js, .jsx, .ts, .tsx, .coffee\n  templateExtensions?: string[]; // .html, .md, .pug, .haml, .jade, .slim, .slm\n  // When foo.js is paired by foo.md,\n  // when foo.md is paried by foo.scss,\n  // most bundlers require import original filename foo.md and foo.scss\n  // instead of foo.html and foo.css.\n  // But some bundlers (dumber) require import processed filename foo.html\n  // and foo.css.\n  useProcessedFilePairFilename?: boolean;\n  // Whenn CSSModule is in use, stringModuleWrap is ignored.\n  useCSSModule?: boolean;\n  hmr?: boolean;\n  enableConventions?: boolean;\n  hmrModule?: string;\n}\n\nexport interface IPreprocessOptions {\n  defaultShadowOptions?: { mode: 'open' | 'closed' };\n  // More details in ./preprocess-html-template.ts\n  stringModuleWrap?: ((id: string) => string);\n  cssExtensions: string[]; // .css, .scss, .sass, .less, .styl\n  jsExtensions: string[]; // .js, .jsx, .ts, .tsx, .coffee\n  templateExtensions: string[]; // .html, .md, .pug, .haml, .jade, .slim, .slm\n  useProcessedFilePairFilename?: boolean;\n  useCSSModule: boolean;\n  hmr?: boolean;\n  enableConventions?: boolean;\n  hmrModule?: string;\n}\n\nexport const defaultCssExtensions = ['.css', '.scss', '.sass', '.less', '.styl'];\nexport const defaultJsExtensions = ['.js', '.jsx', '.ts', '.tsx', '.coffee'];\nexport const defaultTemplateExtensions = ['.html', '.md', '.pug', '.haml', '.jade', '.slim', '.slm'];\n\nexport function preprocessOptions(options: IOptionalPreprocessOptions = {}): IPreprocessOptions {\n  const {\n    cssExtensions = [],\n    jsExtensions = [],\n    templateExtensions = [],\n    useCSSModule = false,\n    hmr = true,\n    enableConventions = true,\n    hmrModule = 'module',\n    ...others\n  } = options;\n\n  return {\n    cssExtensions: Array.from(new Set([...defaultCssExtensions, ...cssExtensions])).sort(),\n    jsExtensions: Array.from(new Set([...defaultJsExtensions, ...jsExtensions])).sort(),\n    templateExtensions: Array.from(new Set([...defaultTemplateExtensions, ...templateExtensions])).sort(),\n    useCSSModule,\n    hmr,\n    hmrModule,\n    enableConventions,\n    ...others\n  };\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport { ModifyCodeResult } from 'modify-code';\nimport { IFileUnit, IOptionalPreprocessOptions, preprocessOptions } from './options.js';\nimport { preprocessHtmlTemplate } from './preprocess-html-template.js';\nimport { preprocessResource } from './preprocess-resource.js';\n\nexport function preprocess(\n  unit: IFileUnit,\n  options: IOptionalPreprocessOptions,\n  _fileExists = fileExists\n): ModifyCodeResult | undefined {\n  const ext = path.extname(unit.path);\n  const basename = path.basename(unit.path, ext);\n  const allOptions = preprocessOptions(options);\n  const base = unit.base || '';\n\n  if (options.enableConventions && allOptions.templateExtensions.includes(ext)) {\n    const possibleFilePair = allOptions.cssExtensions.map(e =>\n      path.join(base, unit.path.slice(0, - ext.length) + e)\n    );\n    const filePair = possibleFilePair.find(_fileExists);\n    if (filePair) {\n      if (allOptions.useProcessedFilePairFilename) {\n        unit.filePair = `${basename}.css`;\n      } else {\n        unit.filePair = path.basename(filePair);\n      }\n    }\n\n    const hasViewModel = Boolean(allOptions.jsExtensions.map(e =>\n      path.join(base, unit.path.slice(0, - ext.length) + e)\n    ).find(_fileExists));\n\n    return preprocessHtmlTemplate(unit, allOptions, hasViewModel);\n  } else if (allOptions.jsExtensions.includes(ext)) {\n    const possibleFilePair = allOptions.templateExtensions.map(e =>\n      path.join(base, unit.path.slice(0, - ext.length) + e)\n    );\n    const filePair = possibleFilePair.find(_fileExists);\n    if (filePair) {\n      if (allOptions.useProcessedFilePairFilename) {\n        unit.filePair = `${basename}.html`;\n      } else {\n        unit.filePair = path.basename(filePair);\n      }\n    } else {\n      // Try foo.js and foo-view.html convention.\n      // This convention is handled by @view(), not @customElement().\n      const possibleViewPair = allOptions.templateExtensions.map(e =>\n        path.join(base, `${unit.path.slice(0, - ext.length)}-view${e}`)\n      );\n      const viewPair = possibleViewPair.find(_fileExists);\n      if (viewPair) {\n        unit.isViewPair = true;\n        if (allOptions.useProcessedFilePairFilename) {\n          unit.filePair = `${basename}-view.html`;\n        } else {\n          unit.filePair = path.basename(viewPair);\n        }\n      }\n    }\n    return preprocessResource(unit, allOptions);\n  }\n}\n\nfunction fileExists(p: string): boolean {\n  try {\n    const stats = fs.statSync(p);\n    return stats.isFile();\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["camelCase","kebabCase","path","ts","modifyCode","parseFragment","BindingMode","fs"],"mappings":"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"}