import { Realm, ExecutionContext } from './realm.js';
import { $PropertyDescriptor } from './types/property-descriptor.js';
import { $PropertyKey, ESType, $AnyNonEmpty, $AnyNonEmptyNonError, $AnyObject, $Any } from './types/_shared.js';
import { $Function } from './types/function.js';
import { $Boolean } from './types/boolean.js';
import { $Undefined } from './types/undefined.js';
import { $Null } from './types/null.js';
import { $Error } from './types/error.js';
import { $List } from './types/list.js';
import { $StringSet } from './globals/string.js';
import { $Empty } from './types/empty.js';
export declare function $Set(ctx: ExecutionContext, O: $AnyObject, P: $PropertyKey, V: $AnyNonEmpty, Throw: $Boolean): $Boolean | $Error;
export declare function $GetV(ctx: ExecutionContext, V: $AnyNonEmptyNonError, P: $PropertyKey): $AnyNonEmpty;
export declare function $GetMethod(ctx: ExecutionContext, V: $AnyNonEmptyNonError, P: $PropertyKey): $Function | $Undefined | $Error;
export declare function $CreateDataProperty(ctx: ExecutionContext, O: $AnyObject, P: $PropertyKey, V: $AnyNonEmpty): $Boolean | $Error;
export declare function $OrdinarySetWithOwnDescriptor(ctx: ExecutionContext, O: $AnyObject, P: $PropertyKey, V: $AnyNonEmpty, Receiver: $AnyObject, ownDesc: $PropertyDescriptor | $Undefined): $Boolean | $Error;
export declare function $HasOwnProperty(ctx: ExecutionContext, O: $AnyObject, P: $PropertyKey): $Boolean | $Error;
export declare function $Call(ctx: ExecutionContext, F: $AnyNonEmpty, V: $AnyNonEmptyNonError, argumentsList: $List<$AnyNonEmpty> | $Undefined): $AnyNonEmpty;
export declare function $Construct(ctx: ExecutionContext, F: $Function, argumentsList: $List<$AnyNonEmpty> | $Undefined, newTarget: $Function | $Undefined): $AnyObject | $Error;
export declare function $DefinePropertyOrThrow(ctx: ExecutionContext, O: $AnyObject, P: $PropertyKey, desc: $PropertyDescriptor): $Boolean | $Error;
export declare function $ValidateAndApplyPropertyDescriptor(ctx: ExecutionContext, O: $AnyObject | $Undefined, P: $PropertyKey | $Undefined, extensible: $Boolean, Desc: $PropertyDescriptor, current: $PropertyDescriptor | $Undefined): $Boolean;
export declare function $SetImmutablePrototype(ctx: ExecutionContext, O: $AnyObject, V: $AnyObject | $Null): $Boolean | $Error;
export declare function $AbstractRelationalComparison(ctx: ExecutionContext, leftFirst: boolean, x: $AnyNonEmpty, y: $AnyNonEmpty): $Boolean | $Undefined | $Error;
export declare function $AbstractEqualityComparison(ctx: ExecutionContext, x: $AnyNonEmpty, y: $AnyNonEmpty): $Boolean | $Error;
export declare function $StrictEqualityComparison(ctx: ExecutionContext, x: $AnyNonEmpty, y: $AnyNonEmpty): $Boolean | $Error;
export declare function $InstanceOfOperator(ctx: ExecutionContext, V: $AnyNonEmpty, target: $AnyNonEmpty): $Boolean | $Error;
export declare function $OrdinaryHasInstance(ctx: ExecutionContext, C: $AnyObject, O: $AnyNonEmpty): $Boolean | $Error;
export declare function $ToPropertyDescriptor(ctx: ExecutionContext, Obj: $AnyNonEmpty, key: $PropertyKey): $PropertyDescriptor | $Error;
export declare function $FromPropertyDescriptor(ctx: ExecutionContext, Desc: $PropertyDescriptor): $AnyObject | $Error;
export declare function $FromPropertyDescriptor(ctx: ExecutionContext, Desc: $Undefined): $Undefined | $Error;
export declare function $FromPropertyDescriptor(ctx: ExecutionContext, Desc: $PropertyDescriptor | $Undefined): $AnyObject | $Undefined | $Error;
export declare function $CreateListFromArrayLike(ctx: ExecutionContext, obj: $AnyNonEmpty, elementTypes?: readonly ESType[]): $List<$AnyNonEmpty> | $Error;
export declare function $GetFunctionRealm(ctx: ExecutionContext, obj: $AnyNonEmpty): Realm | $Error;
export declare function $CopyDataProperties<T extends $AnyObject>(ctx: ExecutionContext, target: T, source: $AnyNonEmptyNonError, excludedItems: readonly $PropertyKey[]): T | $Error;
export declare function $LoopContinues(ctx: ExecutionContext, completion: $Any, labelSet: $StringSet): $Boolean;
export declare function $HostEnsureCanCompileStrings(ctx: ExecutionContext, callerRealm: Realm, calleeRealm: Realm): $Empty | $Error;
export declare function $Invoke(ctx: ExecutionContext, V: $AnyNonEmptyNonError, P: $PropertyKey, argumentsList: $List<$AnyNonEmpty> | $Undefined): $Any;
export declare function $SpeciesConstructor(ctx: ExecutionContext, O: $AnyObject, defaultConstructor: $Function): $Function | $Error;
//# sourceMappingURL=operations.d.ts.map