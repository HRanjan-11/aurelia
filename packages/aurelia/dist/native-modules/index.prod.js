import{DI as e,Registration as t}from"../../../@aurelia/kernel/dist/native-modules/index.js";export{ColorOptions,ConsoleSink,DI,EventAggregator,IContainer,IEventAggregator,ILogger,IServiceLocator,InstanceProvider,LogLevel,LoggerConfiguration,Metadata,Registration,all,bound,camelCase,emptyArray,emptyObject,inject,isArrayIndex,kebabCase,lazy,noop,optional,pascalCase,singleton,toArray,transient}from"../../../@aurelia/kernel/dist/native-modules/index.js";import{Aurelia as r,IPlatform as o,StandardConfiguration as n,CustomElement as a}from"../../../@aurelia/runtime-html/dist/native-modules/index.js";export{AppTask,AuSlotsInfo,Bindable,BindingBehavior,BindingMode,ComputedObserver,ComputedWatcher,Controller,CustomAttribute,CustomElement,ExpressionWatcher,IAppRoot,IAttrMapper,IAttributePattern,IAuSlotsInfo,IAurelia,IEventTarget,ILifecycleHooks,INode,IObserverLocator,IPlatform,IRenderLocation,ISignaler,ITemplateCompilerHooks,IWorkTracker,LifecycleFlags,LifecycleHooks,NodeObserverLocator,ShortHandBindingSyntax,StyleConfiguration,TaskQueuePriority,TemplateCompilerHooks,ValueConverter,ViewFactory,Watch,alias,attributePattern,bindable,bindingBehavior,bindingCommand,children,containerless,createElement,cssModules,customAttribute,customElement,lifecycleHooks,registerAliases,renderer,shadowCSS,subscriberCollection,templateCompilerHooks,templateController,useShadowDOM,valueConverter,watch}from"../../../@aurelia/runtime-html/dist/native-modules/index.js";import{BrowserPlatform as i}from"../../../@aurelia/platform-browser/dist/native-modules/index.js";export{HttpClient,HttpClientConfiguration,IHttpClient,json}from"../../../@aurelia/fetch-client/dist/native-modules/index.js";export{IRouteContext,IRouter,IRouterEvents,Route,RouteConfig,RouteNode,Router,RouterConfiguration,RouterOptions,RouterRegistration,route}from"../../../@aurelia/router/dist/native-modules/index.js";const l=i.getOrCreate(globalThis);class s extends r{constructor(r=function(){return e.createContainer().register(t.instance(o,l),n)}()){super(r)}static start(e){return(new s).start(e)}static app(e){return(new s).app(e)}static enhance(e,t){return(new s).enhance(e,t)}static register(...e){return(new s).register(...e)}app(e){if(a.isType(e)){const t=a.getDefinition(e);let r=document.querySelector(t.name);return null===r&&(r=document.body),super.app({host:r,component:e})}return super.app(e)}}export default s;export{s as Aurelia,l as PLATFORM};
