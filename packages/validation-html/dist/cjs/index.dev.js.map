{"version":3,"file":"index.dev.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/validation-controller.ts","../../src/subscribers/common.ts","../../src/subscribers/validation-container-custom-element.ts","../../src/subscribers/validation-errors-custom-attribute.ts","../../src/validate-binding-behavior.ts","../../src/configuration.ts","../../src/subscribers/validation-result-presenter-service.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  DI,\n  IContainer,\n  IFactory,\n  Constructable,\n  Transformer,\n  Key,\n  IServiceLocator,\n} from '@aurelia/kernel';\nimport {\n  BindingBehaviorExpression,\n  IExpressionParser,\n  LifecycleFlags,\n  ExpressionKind,\n  IsBindingBehavior\n} from '@aurelia/runtime';\nimport {\n  parsePropertyName,\n  PropertyAccessor,\n  PropertyRule,\n  ValidationResult,\n  IValidator,\n  ValidateInstruction,\n  IValidationRule,\n  IValidateable\n} from '@aurelia/validation';\n\nimport type { Scope } from '@aurelia/runtime';\nimport {\n  IPlatform,\n  PropertyBinding,\n} from '@aurelia/runtime-html';\n\nexport type BindingWithBehavior = PropertyBinding & {\n  sourceExpression: BindingBehaviorExpression;\n  target: Element | object;\n};\nexport const enum ValidateEventKind {\n  validate = 'validate',\n  reset = 'reset',\n}\n\n/**\n * The result of a call to the validation controller's validate method.\n */\nexport class ControllerValidateResult {\n  /**\n   * @param {boolean} valid - `true` if the validation passed, else `false`.\n   * @param {ValidationResult[]} results - The validation result of every rule that was evaluated.\n   * @param {ValidateInstruction} [instruction] - The instruction passed to the controller's validate method.\n   */\n  public constructor(\n    public valid: boolean,\n    public results: ValidationResult[],\n    public instruction?: ValidateInstruction,\n  ) { }\n}\n\n/**\n * Describes the validation result and target elements pair.\n * Used to notify the subscribers.\n */\nexport class ValidationResultTarget {\n  public constructor(\n    public result: ValidationResult,\n    public targets: Element[],\n  ) { }\n}\n\n/**\n * Describes the contract of the validation event.\n * Used to notify the subscribers.\n */\nexport class ValidationEvent {\n  /**\n   * @param {ValidateEventKind} kind - 'validate' or 'reset'.\n   * @param {ValidationResultTarget[]} addedResults - new errors added.\n   * @param {ValidationResultTarget[]} removedResults - old errors removed.\n   * @memberof ValidationEvent\n   */\n  public constructor(\n    public kind: ValidateEventKind,\n    public addedResults: ValidationResultTarget[],\n    public removedResults: ValidationResultTarget[],\n  ) { }\n}\n\n/**\n * Contract of the validation errors subscriber.\n * The subscriber should implement this interface.\n */\nexport interface ValidationResultsSubscriber {\n  handleValidationEvent(event: ValidationEvent): void;\n}\n\n/**\n * Describes a binding information to the validation controller.\n * This is provided by the `validate` binding behavior during binding registration.\n */\nexport class BindingInfo {\n  /**\n   * @param {Element} target - The HTMLElement associated with the binding.\n   * @param {Scope} scope - The binding scope.\n   * @param {Scope | null} [hostScope] - The host scope.\n   * @param {PropertyRule[]} [rules] - Rules bound to the binding behavior.\n   * @param {(PropertyInfo | undefined)} [propertyInfo=void 0] - Information describing the associated property for the binding.\n   * @memberof BindingInfo\n   */\n  public constructor(\n    public target: Element,\n    public scope: Scope,\n    public hostScope: Scope | null,\n    public rules?: PropertyRule[],\n    public propertyInfo: PropertyInfo | undefined = void 0,\n  ) { }\n}\n\nclass PropertyInfo {\n  public constructor(\n    public object: any,\n    public propertyName: string,\n  ) { }\n}\n\nexport function getPropertyInfo(binding: BindingWithBehavior, info: BindingInfo, flags: LifecycleFlags = LifecycleFlags.none): PropertyInfo | undefined {\n  let propertyInfo = info.propertyInfo;\n  if (propertyInfo !== void 0) {\n    return propertyInfo;\n  }\n\n  const scope = info.scope;\n  const hostScope = info.hostScope;\n  let expression = binding.sourceExpression.expression as IsBindingBehavior;\n  const locator = binding.locator;\n  let toCachePropertyName = true;\n  let propertyName: string = '';\n  while (expression !== void 0 && expression?.$kind !== ExpressionKind.AccessScope) {\n    let memberName: string;\n    switch (expression.$kind) {\n      case ExpressionKind.BindingBehavior:\n      case ExpressionKind.ValueConverter:\n        expression = expression.expression;\n        continue;\n      case ExpressionKind.AccessMember:\n        memberName = expression.name;\n        break;\n      case ExpressionKind.AccessKeyed: {\n        const keyExpr = expression.key;\n        if (toCachePropertyName) {\n          toCachePropertyName = keyExpr.$kind === ExpressionKind.PrimitiveLiteral;\n        }\n        memberName = `[${(keyExpr.evaluate(flags, scope, hostScope, locator, null) as any).toString()}]`;\n        break;\n      }\n      default:\n        throw new Error(`Unknown expression of type ${expression.constructor.name}`); // TODO: use reporter/logger\n    }\n    const separator = propertyName.startsWith('[') ? '' : '.';\n    propertyName = propertyName.length === 0 ? memberName : `${memberName}${separator}${propertyName}`;\n    expression = expression.object;\n  }\n  if (expression === void 0) {\n    throw new Error(`Unable to parse binding expression: ${binding.sourceExpression.expression}`); // TODO: use reporter/logger\n  }\n  let object: any;\n  if (propertyName.length === 0) {\n    propertyName = expression.name;\n    object = expression.accessHostScope ? hostScope?.bindingContext : scope.bindingContext;\n  } else {\n    object = expression.evaluate(flags, scope, hostScope, locator, null);\n  }\n  if (object === null || object === void 0) {\n    return (void 0);\n  }\n  propertyInfo = new PropertyInfo(object, propertyName);\n  if (toCachePropertyName) {\n    info.propertyInfo = propertyInfo;\n  }\n  return propertyInfo;\n}\n\ntype ValidationPredicate = (result: ValidationResult) => boolean;\n/**\n * Orchestrates validation.\n * Manages a set of bindings, subscribers and objects.\n */\nexport interface IValidationController {\n  /**\n   * Collection of registered property bindings.\n   *\n   * @type {Map<BindingWithBehavior, BindingInfo>}\n   */\n  readonly bindings: Map<BindingWithBehavior, BindingInfo>;\n  /**\n   * Objects that have been added to the controller instance (entity-style validation).\n   *\n   * @type {(Map<IValidateable, PropertyRule[] | undefined>)}\n   */\n  readonly objects: Map<IValidateable, PropertyRule[] | undefined>;\n  /**\n   * Collection of registered subscribers.\n   *\n   * @type {Set<ValidationResultsSubscriber>}\n   */\n  readonly subscribers: Set<ValidationResultsSubscriber>;\n  /**\n   * Current set of validation results.\n   *\n   * @type {ValidationResult[]}\n   */\n  readonly results: ValidationResult[];\n  /**\n   * The core validator, used to perform all validation.\n   *\n   * @type {IValidator}\n   */\n  validator: IValidator;\n  /**\n   * Whether the controller is currently validating.\n   *\n   * @type {boolean}\n   */\n  validating: boolean;\n  /**\n   * Validates and notifies the subscribers with the result.\n   *\n   * @param {ValidateInstruction<TObject>} [instruction] - If omitted, then all the registered objects and bindings will be validated.\n   */\n  validate<TObject extends IValidateable>(instruction?: ValidateInstruction<TObject>): Promise<ControllerValidateResult>;\n  /**\n   * Registers the given `object` with optional `rules` to the controller.\n   * During `validate` without instruction, the object will be validated.\n   * If the instruction consists of only an object tag, and the `object` is tagged also with the similar tag, it will be validated.\n   */\n  addObject(object: IValidateable, rules?: PropertyRule[]): void;\n  /**\n   * Deregisters the given `object` from the controller; i.e. during `validate` the `object` won't be validated.\n   */\n  removeObject(object: IValidateable): void;\n  /**\n   * Adds a manual error. This is never removed explicitly by validation controller when re-validating the errors.\n   * The subscribers gets notified.\n   */\n  addError<TObject>(message: string, object: TObject, propertyName?: string | PropertyAccessor | null): ValidationResult;\n  /**\n   * Removes an error from the controller.\n   * The subscribers gets notified.\n   */\n  removeError(result: ValidationResult): void;\n  /**\n   * Registers the `subscriber` to the controller.\n   * The `subscriber` does not get notified of the previous errors.\n   */\n  addSubscriber(subscriber: ValidationResultsSubscriber): void;\n  /**\n   * Deregisters the `subscriber` from the controller.\n   */\n  removeSubscriber(subscriber: ValidationResultsSubscriber): void;\n  /**\n   * Registers a `binding` to the controller.\n   * The binding will be validated during validate without instruction.\n   * This is usually done via the `validate` binding behavior during binding phase.\n   *\n   * @internal\n   */\n  registerBinding(binding: BindingWithBehavior, info: BindingInfo): void;\n  /**\n   * Deregisters a binding; i.e. it won't be validated during validate without instruction.\n   * This is usually done via the `validate` binding behavior during unbinding phase.\n   *\n   * @internal\n   */\n  unregisterBinding(binding: BindingWithBehavior): void;\n  /**\n   * Validates a specific binding.\n   * This is usually done from the `validate` binding behavior, triggered by some `ValidationTrigger`\n   *\n   * @internal\n   */\n  validateBinding(binding: BindingWithBehavior): Promise<void>;\n  /**\n   * Resets the results for a property associated with a binding.\n   */\n  resetBinding(binding: BindingWithBehavior): void;\n  /**\n   * Revalidates the controller's current set of results.\n   */\n  revalidateErrors(): Promise<void>;\n  /**\n   * Resets any validation results.\n   *\n   * @param {ValidateInstruction} [instruction] - Instructions on what to reset. If omitted all rendered results will be removed.\n   */\n  reset(instruction?: ValidateInstruction): void;\n}\nexport const IValidationController = DI.createInterface<IValidationController>('IValidationController');\n\nexport class ValidationController implements IValidationController {\n\n  public readonly bindings: Map<BindingWithBehavior, BindingInfo> = new Map<BindingWithBehavior, BindingInfo>();\n  public readonly subscribers: Set<ValidationResultsSubscriber> = new Set<ValidationResultsSubscriber>();\n  public readonly results: ValidationResult[] = [];\n  public validating: boolean = false;\n\n  /**\n   * Elements related to validation results that have been rendered.\n   *\n   * @private\n   * @type {Map<ValidationResult, Element[]>}\n   */\n  private readonly elements: WeakMap<ValidationResult, Element[]> = new WeakMap<ValidationResult, Element[]>();\n  public readonly objects: Map<IValidateable, PropertyRule[] | undefined> = new Map<IValidateable, PropertyRule[] | undefined>();\n\n  public constructor(\n    @IValidator public readonly validator: IValidator,\n    @IExpressionParser private readonly parser: IExpressionParser,\n    @IPlatform private readonly platform: IPlatform,\n    @IServiceLocator private readonly locator: IServiceLocator,\n  ) { }\n\n  public addObject(object: IValidateable, rules?: PropertyRule[]): void {\n    this.objects.set(object, rules);\n  }\n\n  public removeObject(object: IValidateable): void {\n    this.objects.delete(object);\n    this.processResultDelta(\n      ValidateEventKind.reset,\n      this.results.filter(result => result.object === object),\n      []);\n  }\n\n  public addError<TObject>(\n    message: string,\n    object: TObject,\n    propertyName?: string | PropertyAccessor\n  ): ValidationResult {\n    let resolvedPropertyName: string | number | undefined;\n    if (propertyName !== void 0) {\n      [resolvedPropertyName] = parsePropertyName(propertyName, this.parser);\n    }\n    const result = new ValidationResult(false, message, resolvedPropertyName, object, undefined, undefined, true);\n    this.processResultDelta(ValidateEventKind.validate, [], [result]);\n    return result;\n  }\n\n  public removeError(result: ValidationResult) {\n    if (this.results.includes(result)) {\n      this.processResultDelta(ValidateEventKind.reset, [result], []);\n    }\n  }\n\n  public addSubscriber(subscriber: ValidationResultsSubscriber) {\n    this.subscribers.add(subscriber);\n  }\n\n  public removeSubscriber(subscriber: ValidationResultsSubscriber) {\n    this.subscribers.delete(subscriber);\n  }\n\n  public registerBinding(binding: BindingWithBehavior, info: BindingInfo) {\n    this.bindings.set(binding, info);\n  }\n\n  public unregisterBinding(binding: BindingWithBehavior) {\n    this.resetBinding(binding);\n    this.bindings.delete(binding);\n  }\n\n  public async validate<TObject extends IValidateable>(instruction?: ValidateInstruction<TObject>): Promise<ControllerValidateResult> {\n    const { object: obj, objectTag, flags } = instruction ?? {};\n    let instructions: ValidateInstruction[];\n    if (obj !== void 0) {\n      instructions = [new ValidateInstruction(\n        obj,\n        instruction!.propertyName,\n        instruction!.rules ?? this.objects.get(obj),\n        objectTag,\n        instruction!.propertyTag\n      )];\n    } else {\n      // validate all objects and bindings.\n      instructions = [\n        ...Array.from(this.objects.entries())\n          .map(([object, rules]) => new ValidateInstruction(object, void 0, rules, objectTag)),\n        ...(!objectTag ? Array.from(this.bindings.entries()) : [])\n          .reduce(\n            (acc: ValidateInstruction[], [binding, info]) => {\n              const propertyInfo = getPropertyInfo(binding, info, flags);\n              if (propertyInfo !== void 0 && !this.objects.has(propertyInfo.object)) {\n                acc.push(new ValidateInstruction(propertyInfo.object, propertyInfo.propertyName, info.rules));\n              }\n              return acc;\n            },\n            [])\n      ];\n    }\n\n    this.validating = true;\n    const task = this.platform.domReadQueue.queueTask(async () => {\n      try {\n        const results = await Promise.all(instructions.map(\n          async (x) => this.validator.validate(x)\n        ));\n        const newResults = results.reduce(\n          (acc, resultSet) => {\n            acc.push(...resultSet);\n            return acc;\n          },\n          []);\n        const predicate = this.getInstructionPredicate(instruction);\n        const oldResults = this.results.filter(predicate);\n        this.processResultDelta(ValidateEventKind.validate, oldResults, newResults);\n\n        return new ControllerValidateResult(newResults.find(r => !r.valid) === void 0, newResults, instruction);\n      } finally {\n        this.validating = false;\n      }\n    });\n    return task.result;\n  }\n\n  public reset(instruction?: ValidateInstruction) {\n    const predicate = this.getInstructionPredicate(instruction);\n    const oldResults = this.results.filter(predicate);\n    this.processResultDelta(ValidateEventKind.reset, oldResults, []);\n  }\n\n  public async validateBinding(binding: BindingWithBehavior) {\n    if (!binding.isBound) { return; }\n\n    const bindingInfo = this.bindings.get(binding);\n    if (bindingInfo === void 0) { return; }\n\n    const propertyInfo = getPropertyInfo(binding, bindingInfo);\n    const rules = bindingInfo.rules;\n    if (propertyInfo === void 0) { return; }\n\n    const { object, propertyName } = propertyInfo;\n    await this.validate(new ValidateInstruction(object, propertyName, rules));\n  }\n\n  public resetBinding(binding: BindingWithBehavior) {\n    const bindingInfo = this.bindings.get(binding);\n    if (bindingInfo === void 0) { return; }\n\n    const propertyInfo = getPropertyInfo(binding, bindingInfo);\n    if (propertyInfo === void 0) { return; }\n\n    bindingInfo.propertyInfo = void 0;\n    const { object, propertyName } = propertyInfo;\n    this.reset(new ValidateInstruction(object, propertyName));\n  }\n\n  public async revalidateErrors() {\n    const map = this.results\n      .reduce(\n        (acc, { isManual, object, propertyRule, rule, valid }) => {\n          if (!valid && !isManual && propertyRule !== void 0 && object !== void 0 && rule !== void 0) {\n            let value = acc.get(object);\n            if (value === void 0) {\n              acc.set(object, value = new Map());\n            }\n            let rules = value.get(propertyRule);\n            if (rules === void 0) {\n              value.set(propertyRule, rules = []);\n            }\n            rules.push(rule);\n          }\n          return acc;\n        },\n        new Map<IValidateable, Map<PropertyRule, IValidationRule[]>>());\n\n    const promises = [];\n    for (const [object, innerMap] of map) {\n      promises.push(\n        this.validate(new ValidateInstruction(\n          object,\n          undefined,\n          Array.from(innerMap)\n            .map(([\n              { validationRules, messageProvider, property },\n              rules\n            ]) => new PropertyRule(this.locator, validationRules, messageProvider, property, [rules]))\n        ))\n      );\n    }\n    await Promise.all(promises);\n  }\n\n  /**\n   * Interprets the instruction and returns a predicate that will identify relevant results in the list of rendered validation results.\n   */\n  private getInstructionPredicate(instruction?: ValidateInstruction): ValidationPredicate {\n    if (instruction === void 0) { return () => true; }\n\n    const propertyName = instruction.propertyName;\n    const rules = instruction.rules;\n\n    return x => !x.isManual\n      && x.object === instruction.object\n      && (propertyName === void 0 || x.propertyName === propertyName)\n      && (\n        rules === void 0\n        || rules.includes(x.propertyRule!)\n        || rules.some((r) => x.propertyRule === void 0 || r.$rules.flat().every(($r) => x.propertyRule!.$rules.flat().includes($r)))\n      );\n  }\n\n  /**\n   * Gets the elements associated with an object and propertyName (if any).\n   */\n  private getAssociatedElements({ object, propertyName }: ValidationResult): Element[] {\n    const elements: Element[] = [];\n    for (const [binding, info] of this.bindings.entries()) {\n      const propertyInfo = getPropertyInfo(binding, info);\n      if (propertyInfo !== void 0 && propertyInfo.object === object && propertyInfo.propertyName === propertyName) {\n        elements.push(info.target);\n      }\n    }\n    return elements;\n  }\n\n  private processResultDelta(\n    kind: ValidateEventKind,\n    oldResults: ValidationResult[],\n    newResults: ValidationResult[],\n  ) {\n    const eventData: ValidationEvent = new ValidationEvent(kind, [], []);\n    // create a shallow copy of newResults so we can mutate it without causing side-effects.\n    newResults = newResults.slice(0);\n\n    const elements = this.elements;\n    for (const oldResult of oldResults) {\n      const removalTargets = elements.get(oldResult)!;\n      elements.delete(oldResult);\n\n      eventData.removedResults.push(new ValidationResultTarget(oldResult, removalTargets));\n\n      // determine if there's a corresponding new result for the old result we are removing.\n      const newResultIndex = newResults.findIndex(x => x.rule === oldResult.rule && x.object === oldResult.object && x.propertyName === oldResult.propertyName);\n      if (newResultIndex === -1) {\n        // no corresponding new result... simple remove.\n        this.results.splice(this.results.indexOf(oldResult), 1);\n      } else {\n        // there is a corresponding new result...\n        const newResult = newResults.splice(newResultIndex, 1)[0];\n        const newTargets = this.getAssociatedElements(newResult);\n        elements.set(newResult, newTargets);\n        eventData.addedResults.push(new ValidationResultTarget(newResult, newTargets));\n\n        // do an in-place replacement of the old result with the new result.\n        // this ensures any repeats bound to this.results will not thrash.\n        this.results.splice(this.results.indexOf(oldResult), 1, newResult);\n      }\n    }\n\n    // add the remaining new results to the event data.\n    for (const result of newResults) {\n      const newTargets = this.getAssociatedElements(result);\n      eventData.addedResults.push(new ValidationResultTarget(result, newTargets));\n      elements.set(result, newTargets);\n      this.results.push(result);\n    }\n\n    for (const subscriber of this.subscribers) {\n      subscriber.handleValidationEvent(eventData);\n    }\n  }\n}\n\nexport class ValidationControllerFactory implements IFactory<Constructable<IValidationController>> {\n  public Type: Constructable<IValidationController> = (void 0)!;\n\n  public registerTransformer(_transformer: Transformer<Constructable<IValidationController>>): boolean {\n    return false;\n  }\n\n  public construct(container: IContainer, _dynamicDependencies?: Key[] | undefined): IValidationController {\n    return _dynamicDependencies !== void 0\n      ? Reflect.construct(ValidationController, _dynamicDependencies)\n      : new ValidationController(\n        container.get<IValidator>(IValidator),\n        container.get(IExpressionParser),\n        container.get(IPlatform),\n        container,\n      );\n  }\n}\n","/**\n * Normalizes https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition into values usable for Array.prototype.sort.\n */\nexport function compareDocumentPositionFlat(a: Node, b: Node): 0 | 1 | -1 {\n  switch (a.compareDocumentPosition(b) & 2 /* DOCUMENT_POSITION_PRECEDING */) {\n    case 0: return 0;     // same element\n    case 2: return 1;     // preceding element\n    default: return -1;   // assume following element otherwise\n  }\n}\n","import { INode, bindable, PartialCustomElementDefinition } from '@aurelia/runtime-html';\nimport { ValidationResultsSubscriber, ValidationEvent, ValidationResultTarget, IValidationController } from '../validation-controller.js';\nimport { compareDocumentPositionFlat } from './common.js';\nimport { optional } from '@aurelia/kernel';\n\nexport const defaultContainerTemplate = `\n<slot></slot>\n<slot name='secondary'>\n  <span repeat.for=\"error of errors\">\n    \\${error.result.message}\n  </span>\n</slot>\n`;\nexport const defaultContainerDefinition: PartialCustomElementDefinition = {\n  name: 'validation-container',\n  shadowOptions: { mode: 'open' },\n  hasSlots: true,\n};\nexport class ValidationContainerCustomElement implements ValidationResultsSubscriber {\n  @bindable public controller!: IValidationController;\n  @bindable public errors: ValidationResultTarget[] = [];\n\n  public constructor(\n    @INode private readonly host: INode<HTMLElement>,\n    @optional(IValidationController) private readonly scopedController: IValidationController\n  ) {}\n\n  public handleValidationEvent(event: ValidationEvent): void {\n    for (const { result } of event.removedResults) {\n      const index = this.errors.findIndex(x => x.result === result);\n      if (index !== -1) {\n        this.errors.splice(index, 1);\n      }\n    }\n\n    for (const { result, targets: elements } of event.addedResults) {\n      if (result.valid) {\n        continue;\n      }\n      const targets = elements.filter(e => this.host.contains(e));\n      if (targets.length > 0) {\n        this.errors.push(new ValidationResultTarget(result, targets));\n      }\n    }\n\n    this.errors.sort((a, b) => {\n      if (a.targets[0] === b.targets[0]) {\n        return 0;\n      }\n      return compareDocumentPositionFlat(a.targets[0], b.targets[0]);\n    });\n  }\n\n  public binding() {\n    this.controller = this.controller ?? this.scopedController;\n    this.controller.addSubscriber(this);\n  }\n\n  public unbinding() {\n    this.controller.removeSubscriber(this);\n  }\n}\n","import { bindable, BindingMode, customAttribute, INode } from '@aurelia/runtime-html';\nimport { IValidationController, ValidationResultsSubscriber, ValidationEvent, ValidationResultTarget } from '../validation-controller.js';\nimport { compareDocumentPositionFlat } from './common.js';\nimport { optional } from '@aurelia/kernel';\n\n/**\n * A validation errors subscriber in form of a custom attribute.\n *\n * It registers itself as a subscriber to the validation controller available for the scope.\n * The target controller can be bound via the `@bindable controller`; when omitted it takes the controller currently registered in the container.\n *\n * The set of errors related to the host element or the children of it , are exposed via the `@bindable errors`.\n *\n * @example\n * ```html\n * <div id=\"div1\" validation-errors.bind=\"nameErrors\">\n *   <input id=\"target1\" type=\"text\" value.two-way=\"person.name & validate\">\n *   <span class=\"error\" repeat.for=\"errorInfo of nameErrors\">\n *     ${errorInfo.result.message}\n *   </span>\n * </div>\n * ```\n */\n@customAttribute('validation-errors')\nexport class ValidationErrorsCustomAttribute implements ValidationResultsSubscriber {\n\n  @bindable public controller?: IValidationController;\n\n  @bindable({ primary: true, mode: BindingMode.twoWay })\n  public errors: ValidationResultTarget[] = [];\n\n  private readonly errorsInternal: ValidationResultTarget[] = [];\n  public constructor(\n    @INode private readonly host: INode<HTMLElement>,\n    @optional(IValidationController) private readonly scopedController: IValidationController\n  ) {}\n\n  public handleValidationEvent(event: ValidationEvent) {\n    for (const { result } of event.removedResults) {\n      const index = this.errorsInternal.findIndex((x) => x.result === result);\n      if (index !== -1) {\n        this.errorsInternal.splice(index, 1);\n      }\n    }\n\n    for (const { result, targets: elements } of event.addedResults) {\n      if (result.valid) {\n        continue;\n      }\n      const targets = elements.filter((e) => this.host.contains(e));\n      if (targets.length > 0) {\n        this.errorsInternal.push(new ValidationResultTarget(result, targets));\n      }\n    }\n\n    this.errorsInternal.sort((a, b) => {\n      if (a.targets[0] === b.targets[0]) {\n        return 0;\n      }\n      return compareDocumentPositionFlat(a.targets[0], b.targets[0]);\n    });\n    this.errors = this.errorsInternal;\n  }\n\n  public binding() {\n    this.controller = this.controller ?? this.scopedController;\n    this.controller.addSubscriber(this);\n  }\n\n  public unbinding() {\n    this.controller!.removeSubscriber(this);\n  }\n}\n","import { DI } from '@aurelia/kernel';\nimport {\n  bindingBehavior,\n  BindingInterceptor,\n  BindingMediator,\n  LifecycleFlags,\n  PropertyBinding,\n  IBinding,\n  BindingBehaviorExpression,\n  ITask,\n  IPlatform,\n  ICustomElementViewModel,\n} from '@aurelia/runtime-html';\nimport { PropertyRule } from '@aurelia/validation';\nimport { BindingWithBehavior, IValidationController, ValidationController, BindingInfo, ValidationResultsSubscriber, ValidationEvent } from './validation-controller.js';\n\nimport type { Scope } from '@aurelia/runtime';\n\n/**\n * Validation triggers.\n */\nexport enum ValidationTrigger {\n  /**\n   * Manual validation.  Use the controller's `validate()` and  `reset()` methods to validate all bindings.\n   */\n  manual = 'manual',\n\n  /**\n   * Validate the binding when the binding's target element fires a DOM 'blur' event.\n   */\n  blur = 'blur',\n\n  /**\n   * Validate the binding when the binding's target element fires a DOM 'focusout' event.\n   */\n  focusout = 'focusout',\n\n  /**\n   * Validate the binding when it updates the model due to a change in the source property (usually triggered by some change in view)\n   */\n  change = 'change',\n\n  /**\n   * Validate the binding when the binding's target element fires a DOM 'blur' event and when it updates the model due to a change in the view.\n   */\n  changeOrBlur = 'changeOrBlur',\n\n  /**\n   * Validate the binding when the binding's target element fires a DOM 'focusout' event and when it updates the model due to a change in the view.\n   */\n  changeOrFocusout = 'changeOrFocusout',\n}\n\n/* @internal */\nexport const IDefaultTrigger = DI.createInterface<ValidationTrigger>('IDefaultTrigger');\n\n/**\n * Binding behavior. Indicates the bound property should be validated.\n */\n@bindingBehavior('validate')\nexport class ValidateBindingBehavior extends BindingInterceptor implements ValidationResultsSubscriber {\n  private propertyBinding: BindingWithBehavior = (void 0)!;\n  private target: HTMLElement = (void 0)!;\n  private trigger!: ValidationTrigger;\n  private readonly scopedController?: IValidationController;\n  private controller!: IValidationController;\n  private isChangeTrigger: boolean = false;\n  private readonly defaultTrigger: ValidationTrigger;\n  private scope!: Scope;\n  private hostScope: Scope | null = null;\n  private readonly triggerMediator: BindingMediator<'handleTriggerChange'> = new BindingMediator('handleTriggerChange', this, this.observerLocator, this.locator);\n  private readonly controllerMediator: BindingMediator<'handleControllerChange'> = new BindingMediator('handleControllerChange', this, this.observerLocator, this.locator);\n  private readonly rulesMediator: BindingMediator<'handleRulesChange'> = new BindingMediator('handleRulesChange', this, this.observerLocator, this.locator);\n  private isDirty: boolean = false;\n  private validatedOnce: boolean = false;\n  private triggerEvent: 'blur' | 'focusout' | null = null;\n  private bindingInfo!: BindingInfo;\n  private readonly platform: IPlatform;\n\n  public constructor(\n    public readonly binding: BindingWithBehavior,\n    expr: BindingBehaviorExpression,\n  ) {\n    super(binding, expr);\n    const locator = this.locator;\n    this.platform = locator.get(IPlatform);\n    this.defaultTrigger = locator.get(IDefaultTrigger);\n    if (locator.has(IValidationController, true)) {\n      this.scopedController = locator.get(IValidationController);\n    }\n    this.setPropertyBinding();\n  }\n\n  public updateSource(value: unknown, flags: LifecycleFlags) {\n    // TODO: need better approach. If done incorrectly may cause infinite loop, stack overflow 💣\n    if (this.interceptor !== this) {\n      this.interceptor.updateSource(value, flags);\n    } else {\n      // let binding = this as BindingInterceptor;\n      // while (binding.binding !== void 0) {\n      //   binding = binding.binding as unknown as BindingInterceptor;\n      // }\n      // binding.updateSource(value, flags);\n\n      // this is a shortcut of the above code\n      this.propertyBinding.updateSource(value, flags);\n    }\n\n    this.isDirty = true;\n    const event = this.triggerEvent;\n    if (this.isChangeTrigger && (event === null || event !== null && this.validatedOnce)) {\n      this.validateBinding();\n    }\n  }\n\n  public handleEvent(_event: Event) {\n    if (!this.isChangeTrigger || this.isChangeTrigger && this.isDirty) {\n      this.validateBinding();\n    }\n  }\n\n  public $bind(flags: LifecycleFlags, scope: Scope, hostScope: Scope | null) {\n    this.scope = scope;\n    this.hostScope = hostScope;\n    this.binding.$bind(flags, scope, hostScope);\n    this.setTarget();\n    const delta = this.processBindingExpressionArgs(flags);\n    this.processDelta(delta);\n  }\n\n  public $unbind(flags: LifecycleFlags) {\n    this.task?.cancel();\n    this.task = null;\n\n    const event = this.triggerEvent;\n    if (event !== null) {\n      this.target?.removeEventListener(event, this);\n    }\n    this.controller?.removeSubscriber(this);\n    this.controller?.unregisterBinding(this.propertyBinding);\n    this.binding.$unbind(flags);\n  }\n\n  public handleTriggerChange(newValue: unknown, _previousValue: unknown, _flags: LifecycleFlags): void {\n    this.processDelta(new ValidateArgumentsDelta(void 0, this.ensureTrigger(newValue), void 0));\n  }\n\n  public handleControllerChange(newValue: unknown, _previousValue: unknown, _flags: LifecycleFlags): void {\n    this.processDelta(new ValidateArgumentsDelta(this.ensureController(newValue), void 0, void 0));\n  }\n\n  public handleRulesChange(newValue: unknown, _previousValue: unknown, _flags: LifecycleFlags): void {\n    this.processDelta(new ValidateArgumentsDelta(void 0, void 0, this.ensureRules(newValue)));\n  }\n\n  public handleValidationEvent(event: ValidationEvent): void {\n    const triggerEvent = this.triggerEvent;\n    const propertyName = this.bindingInfo.propertyInfo?.propertyName;\n    if (propertyName !== void 0 && triggerEvent !== null && this.isChangeTrigger) {\n      this.validatedOnce = event.addedResults.find((r) => r.result.propertyName === propertyName) !== void 0;\n    }\n  }\n\n  private processBindingExpressionArgs(flags: LifecycleFlags): ValidateArgumentsDelta {\n    const scope: Scope = this.scope;\n    const hostScope: Scope | null = this.hostScope;\n    const locator = this.locator;\n    let rules: PropertyRule[] | undefined;\n    let trigger: ValidationTrigger | undefined;\n    let controller: ValidationController | undefined;\n\n    let expression = this.propertyBinding.sourceExpression;\n    while (expression.name !== 'validate' && expression !== void 0) {\n      expression = expression.expression as BindingBehaviorExpression;\n    }\n    const evaluationFlags = flags | LifecycleFlags.isStrictBindingStrategy;\n    const args = expression.args;\n    for (let i = 0, ii = args.length; i < ii; i++) {\n      const arg = args[i];\n      switch (i) {\n        case 0:\n          trigger = this.ensureTrigger(arg.evaluate(evaluationFlags, scope, hostScope, locator, this.triggerMediator));\n          break;\n        case 1:\n          controller = this.ensureController(arg.evaluate(evaluationFlags, scope, hostScope, locator, this.controllerMediator));\n          break;\n        case 2:\n          rules = this.ensureRules(arg.evaluate(evaluationFlags, scope, hostScope, locator, this.rulesMediator));\n          break;\n        default:\n          throw new Error(`Unconsumed argument#${i + 1} for validate binding behavior: ${arg.evaluate(evaluationFlags, scope, hostScope, locator, null)}`);\n      }\n    }\n\n    return new ValidateArgumentsDelta(this.ensureController(controller), this.ensureTrigger(trigger), rules);\n  }\n\n  private task: ITask | null = null;\n  private validateBinding() {\n    // Queue the new one before canceling the old one, to prevent early yield\n    const task = this.task;\n    this.task = this.platform.domReadQueue.queueTask(() =>\n      this.controller.validateBinding(this.propertyBinding)\n    );\n    if (task !== this.task) {\n      task?.cancel();\n    }\n  }\n\n  private processDelta(delta: ValidateArgumentsDelta) {\n    const trigger = delta.trigger ?? this.trigger;\n    const controller = delta.controller ?? this.controller;\n    const rules = delta.rules;\n    if (this.trigger !== trigger) {\n      let event = this.triggerEvent;\n      if (event !== null) {\n        this.target.removeEventListener(event, this);\n      }\n\n      this.validatedOnce = false;\n      this.isDirty = false;\n      this.trigger = trigger;\n      this.isChangeTrigger = trigger === ValidationTrigger.change\n        || trigger === ValidationTrigger.changeOrBlur\n        || trigger === ValidationTrigger.changeOrFocusout;\n\n      event = this.setTriggerEvent(this.trigger);\n      if (event !== null) {\n        this.target.addEventListener(event, this);\n      }\n    }\n    if (this.controller !== controller || rules !== void 0) {\n      this.controller?.removeSubscriber(this);\n      this.controller?.unregisterBinding(this.propertyBinding);\n\n      this.controller = controller;\n      controller.registerBinding(this.propertyBinding, this.setBindingInfo(rules));\n      controller.addSubscriber(this);\n    }\n  }\n\n  private ensureTrigger(trigger: unknown): ValidationTrigger {\n    if (trigger === (void 0) || trigger === null) {\n      trigger = this.defaultTrigger;\n    } else if (!Object.values(ValidationTrigger).includes(trigger as ValidationTrigger)) {\n      throw new Error(`${trigger} is not a supported validation trigger`); // TODO: use reporter\n    }\n    return trigger as ValidationTrigger;\n  }\n\n  private ensureController(controller: unknown): ValidationController {\n    if (controller === (void 0) || controller === null) {\n      controller = this.scopedController;\n    } else if (!(controller instanceof ValidationController)) {\n      throw new Error(`${controller} is not of type ValidationController`); // TODO: use reporter\n    }\n    return controller as ValidationController;\n  }\n\n  private ensureRules(rules: unknown): PropertyRule[] | undefined {\n    if (Array.isArray(rules) && rules.every((item) => item instanceof PropertyRule)) {\n      return rules;\n    }\n  }\n\n  private setPropertyBinding() {\n    let binding: IBinding = this.binding;\n    while (!(binding instanceof PropertyBinding) && binding !== void 0) {\n      binding = (binding as unknown as BindingInterceptor).binding;\n    }\n    if (binding === void 0) {\n      throw new Error('Unable to set property binding');\n    }\n    this.propertyBinding = binding as BindingWithBehavior;\n  }\n\n  private setTarget() {\n    const target = this.propertyBinding.target;\n    if (target instanceof this.platform.Node) {\n      this.target = target as HTMLElement;\n    } else {\n      const controller = (target as ICustomElementViewModel)?.$controller;\n      if (controller === void 0) {\n        throw new Error('Invalid binding target'); // TODO: use reporter\n      }\n      this.target = controller.host;\n    }\n  }\n\n  private setTriggerEvent(trigger: ValidationTrigger) {\n    let triggerEvent: 'blur' | 'focusout' | null = null;\n    switch (trigger) {\n      case ValidationTrigger.blur:\n      case ValidationTrigger.changeOrBlur:\n        triggerEvent = 'blur';\n        break;\n      case ValidationTrigger.focusout:\n      case ValidationTrigger.changeOrFocusout:\n        triggerEvent = 'focusout';\n        break;\n    }\n    return this.triggerEvent = triggerEvent;\n  }\n\n  private setBindingInfo(rules: PropertyRule[] | undefined): BindingInfo {\n    return this.bindingInfo = new BindingInfo(this.target, this.scope, this.hostScope, rules);\n  }\n}\n\nclass ValidateArgumentsDelta {\n  public constructor(\n    public controller?: ValidationController,\n    public trigger?: ValidationTrigger,\n    public rules?: PropertyRule[],\n  ) { }\n}\n","import { Constructable, IContainer, noop, Registration } from '@aurelia/kernel';\nimport { getDefaultValidationConfiguration, ValidationCustomizationOptions, ValidationConfiguration } from '@aurelia/validation';\nimport { ValidationContainerCustomElement, defaultContainerDefinition, defaultContainerTemplate } from './subscribers/validation-container-custom-element.js';\nimport { ValidationErrorsCustomAttribute } from './subscribers/validation-errors-custom-attribute.js';\nimport { IDefaultTrigger, ValidateBindingBehavior, ValidationTrigger } from './validate-binding-behavior.js';\nimport { IValidationController, ValidationControllerFactory } from './validation-controller.js';\nimport { ValidationHtmlCustomizationOptions } from './validation-customization-options.js';\nimport { CustomElement } from '@aurelia/runtime-html';\n\nexport type ValidationConfigurationProvider = (options: ValidationHtmlCustomizationOptions) => void;\n\nexport function getDefaultValidationHtmlConfiguration(): ValidationHtmlCustomizationOptions {\n  return {\n    ...getDefaultValidationConfiguration(),\n    ValidationControllerFactoryType: ValidationControllerFactory,\n    DefaultTrigger: ValidationTrigger.focusout,\n    UseSubscriberCustomAttribute: true,\n    SubscriberCustomElementTemplate: defaultContainerTemplate\n  };\n}\n\nfunction createConfiguration(optionsProvider: ValidationConfigurationProvider) {\n  return {\n    optionsProvider,\n    register(container: IContainer) {\n      const options: ValidationHtmlCustomizationOptions = getDefaultValidationHtmlConfiguration();\n\n      optionsProvider(options);\n\n      container.registerFactory(IValidationController as unknown as Constructable, new options.ValidationControllerFactoryType());\n\n      container.register(\n        ValidationConfiguration.customize((opt) => {\n          // copy the customization iff the key exists in validation configuration\n          for (const optKey of Object.keys(opt) as (keyof ValidationCustomizationOptions)[]) {\n            if (optKey in options) {\n              (opt as any)[optKey] = options[optKey]; // TS cannot infer that the value of the same key is being copied from A to B, and rejects the assignment due to type broadening\n            }\n          }\n        }),\n        Registration.instance(IDefaultTrigger, options.DefaultTrigger),\n        ValidateBindingBehavior,\n      );\n      if (options.UseSubscriberCustomAttribute) {\n        container.register(ValidationErrorsCustomAttribute);\n      }\n      const template = options.SubscriberCustomElementTemplate;\n      if (template) { // we need the boolean coercion here to ignore null, undefined, and ''\n        container.register(CustomElement.define({ ...defaultContainerDefinition, template }, ValidationContainerCustomElement));\n      }\n      return container;\n    },\n    customize(cb?: ValidationConfigurationProvider) {\n      return createConfiguration(cb ?? optionsProvider);\n    },\n  };\n}\n\nexport const ValidationHtmlConfiguration = createConfiguration(noop);\n\n","import { IPlatform } from '@aurelia/runtime-html';\nimport { ValidationResult } from '@aurelia/validation';\nimport { ValidationEvent, ValidationResultsSubscriber, ValidationResultTarget } from '../validation-controller.js';\n\nconst resultIdAttribute = 'validation-result-id';\nconst resultContainerAttribute = 'validation-result-container';\n\nexport class ValidationResultPresenterService implements ValidationResultsSubscriber {\n  public constructor(\n    @IPlatform private readonly platform: IPlatform,\n  ) {}\n\n  public handleValidationEvent(event: ValidationEvent): void {\n    for (const [target, results] of this.reverseMap(event.removedResults)) {\n      this.remove(target, results);\n    }\n\n    for (const [target, results] of this.reverseMap(event.addedResults)) {\n      this.add(target, results);\n    }\n  }\n\n  public remove(target: Element, results: ValidationResult[]) {\n    const messageContainer = this.getValidationMessageContainer(target);\n    if (messageContainer === null) { return; }\n    this.removeResults(messageContainer, results);\n  }\n\n  public add(target: Element, results: ValidationResult[]) {\n    const messageContainer = this.getValidationMessageContainer(target);\n    if (messageContainer === null) { return; }\n    this.showResults(messageContainer, results);\n  }\n\n  public getValidationMessageContainer(target: Element): Element | null {\n    const parent = target.parentElement;\n    if (parent === null) { return null; }\n    let messageContainer = parent.querySelector(`[${resultContainerAttribute}]`);\n    if (messageContainer === null) {\n      messageContainer = this.platform.document.createElement('div') as Element;\n      messageContainer.setAttribute(resultContainerAttribute, '');\n      parent.appendChild(messageContainer);\n    }\n    return messageContainer;\n  }\n\n  public showResults(messageContainer: Element, results: ValidationResult[]) {\n    messageContainer.append(\n      ...results.reduce((acc: Element[], result) => {\n        if (!result.valid) {\n          const span = this.platform.document.createElement('span') as HTMLSpanElement;\n          span.setAttribute(resultIdAttribute, result.id.toString());\n          span.textContent = result.message!;\n          acc.push(span);\n        }\n        return acc;\n      }, [])\n    );\n  }\n\n  public removeResults(messageContainer: Element, results: ValidationResult[]) {\n    for (const result of results) {\n      if (!result.valid) {\n        messageContainer.querySelector(`[${resultIdAttribute}=\"${result.id}\"]`)?.remove();\n      }\n    }\n  }\n\n  private reverseMap(results: ValidationResultTarget[]) {\n    const map = new Map<Element, ValidationResult[]>();\n    for (const { result, targets } of results) {\n      for (const target of targets) {\n        let targetResults = map.get(target);\n        if (targetResults === void 0) {\n          map.set(target, targetResults = []);\n        }\n        targetResults.push(result);\n      }\n    }\n    return map;\n  }\n}\n"],"names":["ValidateEventKind","DI","ValidationController","parsePropertyName","ValidationResult","ValidateInstruction","PropertyRule","IValidator","IExpressionParser","IPlatform","IServiceLocator","ValidationContainerCustomElement","bindable","INode","optional","ValidationErrorsCustomAttribute","BindingMode","customAttribute","ValidationTrigger","ValidateBindingBehavior","BindingInterceptor","BindingMediator","PropertyBinding","bindingBehavior","getDefaultValidationConfiguration","ValidationConfiguration","Registration","CustomElement","noop","ValidationResultPresenterService"],"mappings":"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"}