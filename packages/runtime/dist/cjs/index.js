"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.disableArrayObservation = exports.enableArrayObservation = exports.ArrayIndexObserver = exports.ArrayObserver = exports.ParserState = exports.parse = exports.Precedence = exports.Access = exports.Char = exports.parseExpression = exports.BindingType = exports.IExpressionParser = exports.BindingObserverRecord = exports.BindingMediator = exports.connectable = exports.Interpolation = exports.ForOfStatement = exports.BindingIdentifier = exports.ObjectBindingPattern = exports.ArrayBindingPattern = exports.TaggedTemplateExpression = exports.TemplateExpression = exports.ObjectLiteralExpression = exports.ArrayLiteralExpression = exports.HtmlLiteralExpression = exports.PrimitiveLiteralExpression = exports.UnaryExpression = exports.BinaryExpression = exports.CallMemberExpression = exports.CallScopeExpression = exports.AccessKeyedExpression = exports.AccessMemberExpression = exports.AccessScopeExpression = exports.AccessThisExpression = exports.ConditionalExpression = exports.AssignExpression = exports.ValueConverterExpression = exports.BindingBehaviorExpression = exports.CustomExpression = exports.CallFunctionExpression = exports.ExpressionKind = exports.registerAliases = exports.alias = exports.TaskStatus = exports.TaskQueuePriority = exports.TaskAbortError = exports.Task = exports.TaskQueue = exports.Platform = exports.IPlatform = void 0;
exports.copyIndexMap = exports.isIndexMap = exports.DelegationStrategy = exports.CollectionKind = exports.AccessorType = exports.LifecycleFlags = exports.BindingMode = exports.valueConverter = exports.ValueConverterDefinition = exports.ValueConverter = exports.BindingBehaviorStrategy = exports.BindingBehaviorFactory = exports.BindingInterceptor = exports.BindingBehaviorDefinition = exports.BindingBehavior = exports.bindingBehavior = exports.ConnectableSwitcher = exports.subscriberCollection = exports.SubscriberRecord = exports.ISignaler = exports.SetterObserver = exports.ProxyObservable = exports.PropertyAccessor = exports.PrimitiveObserver = exports.ObserverLocator = exports.getCollectionObserver = exports.INodeObserverLocator = exports.IObserverLocator = exports.observable = exports.Observation = exports.IObservation = exports.withFlushQueue = exports.FlushQueue = exports.DirtyCheckSettings = exports.DirtyCheckProperty = exports.IDirtyChecker = exports.ComputedObserver = exports.CollectionSizeObserver = exports.CollectionLengthObserver = exports.OverrideContext = exports.Scope = exports.BindingContext = exports.disableSetObservation = exports.enableSetObservation = exports.SetObserver = exports.disableMapObservation = exports.enableMapObservation = exports.MapObserver = exports.synchronizeIndices = exports.applyMutationsToIndices = void 0;
exports.createIndexMap = exports.cloneIndexMap = void 0;
var kernel_1 = require("@aurelia/kernel");
Object.defineProperty(exports, "IPlatform", { enumerable: true, get: function () { return kernel_1.IPlatform; } });
var platform_1 = require("@aurelia/platform");
Object.defineProperty(exports, "Platform", { enumerable: true, get: function () { return platform_1.Platform; } });
Object.defineProperty(exports, "TaskQueue", { enumerable: true, get: function () { return platform_1.TaskQueue; } });
Object.defineProperty(exports, "Task", { enumerable: true, get: function () { return platform_1.Task; } });
Object.defineProperty(exports, "TaskAbortError", { enumerable: true, get: function () { return platform_1.TaskAbortError; } });
Object.defineProperty(exports, "TaskQueuePriority", { enumerable: true, get: function () { return platform_1.TaskQueuePriority; } });
Object.defineProperty(exports, "TaskStatus", { enumerable: true, get: function () { return platform_1.TaskStatus; } });
var alias_js_1 = require("./alias.js");
Object.defineProperty(exports, "alias", { enumerable: true, get: function () { return alias_js_1.alias; } });
Object.defineProperty(exports, "registerAliases", { enumerable: true, get: function () { return alias_js_1.registerAliases; } });
var ast_js_1 = require("./binding/ast.js");
Object.defineProperty(exports, "ExpressionKind", { enumerable: true, get: function () { return ast_js_1.ExpressionKind; } });
Object.defineProperty(exports, "CallFunctionExpression", { enumerable: true, get: function () { return ast_js_1.CallFunctionExpression; } });
Object.defineProperty(exports, "CustomExpression", { enumerable: true, get: function () { return ast_js_1.CustomExpression; } });
Object.defineProperty(exports, "BindingBehaviorExpression", { enumerable: true, get: function () { return ast_js_1.BindingBehaviorExpression; } });
Object.defineProperty(exports, "ValueConverterExpression", { enumerable: true, get: function () { return ast_js_1.ValueConverterExpression; } });
Object.defineProperty(exports, "AssignExpression", { enumerable: true, get: function () { return ast_js_1.AssignExpression; } });
Object.defineProperty(exports, "ConditionalExpression", { enumerable: true, get: function () { return ast_js_1.ConditionalExpression; } });
Object.defineProperty(exports, "AccessThisExpression", { enumerable: true, get: function () { return ast_js_1.AccessThisExpression; } });
Object.defineProperty(exports, "AccessScopeExpression", { enumerable: true, get: function () { return ast_js_1.AccessScopeExpression; } });
Object.defineProperty(exports, "AccessMemberExpression", { enumerable: true, get: function () { return ast_js_1.AccessMemberExpression; } });
Object.defineProperty(exports, "AccessKeyedExpression", { enumerable: true, get: function () { return ast_js_1.AccessKeyedExpression; } });
Object.defineProperty(exports, "CallScopeExpression", { enumerable: true, get: function () { return ast_js_1.CallScopeExpression; } });
Object.defineProperty(exports, "CallMemberExpression", { enumerable: true, get: function () { return ast_js_1.CallMemberExpression; } });
Object.defineProperty(exports, "BinaryExpression", { enumerable: true, get: function () { return ast_js_1.BinaryExpression; } });
Object.defineProperty(exports, "UnaryExpression", { enumerable: true, get: function () { return ast_js_1.UnaryExpression; } });
Object.defineProperty(exports, "PrimitiveLiteralExpression", { enumerable: true, get: function () { return ast_js_1.PrimitiveLiteralExpression; } });
Object.defineProperty(exports, "HtmlLiteralExpression", { enumerable: true, get: function () { return ast_js_1.HtmlLiteralExpression; } });
Object.defineProperty(exports, "ArrayLiteralExpression", { enumerable: true, get: function () { return ast_js_1.ArrayLiteralExpression; } });
Object.defineProperty(exports, "ObjectLiteralExpression", { enumerable: true, get: function () { return ast_js_1.ObjectLiteralExpression; } });
Object.defineProperty(exports, "TemplateExpression", { enumerable: true, get: function () { return ast_js_1.TemplateExpression; } });
Object.defineProperty(exports, "TaggedTemplateExpression", { enumerable: true, get: function () { return ast_js_1.TaggedTemplateExpression; } });
Object.defineProperty(exports, "ArrayBindingPattern", { enumerable: true, get: function () { return ast_js_1.ArrayBindingPattern; } });
Object.defineProperty(exports, "ObjectBindingPattern", { enumerable: true, get: function () { return ast_js_1.ObjectBindingPattern; } });
Object.defineProperty(exports, "BindingIdentifier", { enumerable: true, get: function () { return ast_js_1.BindingIdentifier; } });
Object.defineProperty(exports, "ForOfStatement", { enumerable: true, get: function () { return ast_js_1.ForOfStatement; } });
Object.defineProperty(exports, "Interpolation", { enumerable: true, get: function () { return ast_js_1.Interpolation; } });
var connectable_js_1 = require("./binding/connectable.js");
Object.defineProperty(exports, "connectable", { enumerable: true, get: function () { return connectable_js_1.connectable; } });
Object.defineProperty(exports, "BindingMediator", { enumerable: true, get: function () { return connectable_js_1.BindingMediator; } });
Object.defineProperty(exports, "BindingObserverRecord", { enumerable: true, get: function () { return connectable_js_1.BindingObserverRecord; } });
var expression_parser_js_1 = require("./binding/expression-parser.js");
Object.defineProperty(exports, "IExpressionParser", { enumerable: true, get: function () { return expression_parser_js_1.IExpressionParser; } });
Object.defineProperty(exports, "BindingType", { enumerable: true, get: function () { return expression_parser_js_1.BindingType; } });
Object.defineProperty(exports, "parseExpression", { enumerable: true, get: function () { return expression_parser_js_1.parseExpression; } });
Object.defineProperty(exports, "Char", { enumerable: true, get: function () { return expression_parser_js_1.Char; } });
Object.defineProperty(exports, "Access", { enumerable: true, get: function () { return expression_parser_js_1.Access; } });
Object.defineProperty(exports, "Precedence", { enumerable: true, get: function () { return expression_parser_js_1.Precedence; } });
Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return expression_parser_js_1.parse; } });
Object.defineProperty(exports, "ParserState", { enumerable: true, get: function () { return expression_parser_js_1.ParserState; } });
var array_observer_js_1 = require("./observation/array-observer.js");
Object.defineProperty(exports, "ArrayObserver", { enumerable: true, get: function () { return array_observer_js_1.ArrayObserver; } });
Object.defineProperty(exports, "ArrayIndexObserver", { enumerable: true, get: function () { return array_observer_js_1.ArrayIndexObserver; } });
Object.defineProperty(exports, "enableArrayObservation", { enumerable: true, get: function () { return array_observer_js_1.enableArrayObservation; } });
Object.defineProperty(exports, "disableArrayObservation", { enumerable: true, get: function () { return array_observer_js_1.disableArrayObservation; } });
Object.defineProperty(exports, "applyMutationsToIndices", { enumerable: true, get: function () { return array_observer_js_1.applyMutationsToIndices; } });
Object.defineProperty(exports, "synchronizeIndices", { enumerable: true, get: function () { return array_observer_js_1.synchronizeIndices; } });
var map_observer_js_1 = require("./observation/map-observer.js");
Object.defineProperty(exports, "MapObserver", { enumerable: true, get: function () { return map_observer_js_1.MapObserver; } });
Object.defineProperty(exports, "enableMapObservation", { enumerable: true, get: function () { return map_observer_js_1.enableMapObservation; } });
Object.defineProperty(exports, "disableMapObservation", { enumerable: true, get: function () { return map_observer_js_1.disableMapObservation; } });
var set_observer_js_1 = require("./observation/set-observer.js");
Object.defineProperty(exports, "SetObserver", { enumerable: true, get: function () { return set_observer_js_1.SetObserver; } });
Object.defineProperty(exports, "enableSetObservation", { enumerable: true, get: function () { return set_observer_js_1.enableSetObservation; } });
Object.defineProperty(exports, "disableSetObservation", { enumerable: true, get: function () { return set_observer_js_1.disableSetObservation; } });
var binding_context_js_1 = require("./observation/binding-context.js");
Object.defineProperty(exports, "BindingContext", { enumerable: true, get: function () { return binding_context_js_1.BindingContext; } });
Object.defineProperty(exports, "Scope", { enumerable: true, get: function () { return binding_context_js_1.Scope; } });
Object.defineProperty(exports, "OverrideContext", { enumerable: true, get: function () { return binding_context_js_1.OverrideContext; } });
var collection_length_observer_js_1 = require("./observation/collection-length-observer.js");
Object.defineProperty(exports, "CollectionLengthObserver", { enumerable: true, get: function () { return collection_length_observer_js_1.CollectionLengthObserver; } });
Object.defineProperty(exports, "CollectionSizeObserver", { enumerable: true, get: function () { return collection_length_observer_js_1.CollectionSizeObserver; } });
var computed_observer_js_1 = require("./observation/computed-observer.js");
Object.defineProperty(exports, "ComputedObserver", { enumerable: true, get: function () { return computed_observer_js_1.ComputedObserver; } });
var dirty_checker_js_1 = require("./observation/dirty-checker.js");
Object.defineProperty(exports, "IDirtyChecker", { enumerable: true, get: function () { return dirty_checker_js_1.IDirtyChecker; } });
Object.defineProperty(exports, "DirtyCheckProperty", { enumerable: true, get: function () { return dirty_checker_js_1.DirtyCheckProperty; } });
Object.defineProperty(exports, "DirtyCheckSettings", { enumerable: true, get: function () { return dirty_checker_js_1.DirtyCheckSettings; } });
var flush_queue_js_1 = require("./observation/flush-queue.js");
Object.defineProperty(exports, "FlushQueue", { enumerable: true, get: function () { return flush_queue_js_1.FlushQueue; } });
Object.defineProperty(exports, "withFlushQueue", { enumerable: true, get: function () { return flush_queue_js_1.withFlushQueue; } });
var observation_js_1 = require("./observation/observation.js");
Object.defineProperty(exports, "IObservation", { enumerable: true, get: function () { return observation_js_1.IObservation; } });
Object.defineProperty(exports, "Observation", { enumerable: true, get: function () { return observation_js_1.Observation; } });
var observable_js_1 = require("./observation/observable.js");
Object.defineProperty(exports, "observable", { enumerable: true, get: function () { return observable_js_1.observable; } });
var observer_locator_js_1 = require("./observation/observer-locator.js");
Object.defineProperty(exports, "IObserverLocator", { enumerable: true, get: function () { return observer_locator_js_1.IObserverLocator; } });
Object.defineProperty(exports, "INodeObserverLocator", { enumerable: true, get: function () { return observer_locator_js_1.INodeObserverLocator; } });
Object.defineProperty(exports, "getCollectionObserver", { enumerable: true, get: function () { return observer_locator_js_1.getCollectionObserver; } });
Object.defineProperty(exports, "ObserverLocator", { enumerable: true, get: function () { return observer_locator_js_1.ObserverLocator; } });
var primitive_observer_js_1 = require("./observation/primitive-observer.js");
Object.defineProperty(exports, "PrimitiveObserver", { enumerable: true, get: function () { return primitive_observer_js_1.PrimitiveObserver; } });
var property_accessor_js_1 = require("./observation/property-accessor.js");
Object.defineProperty(exports, "PropertyAccessor", { enumerable: true, get: function () { return property_accessor_js_1.PropertyAccessor; } });
var proxy_observation_js_1 = require("./observation/proxy-observation.js");
Object.defineProperty(exports, "ProxyObservable", { enumerable: true, get: function () { return proxy_observation_js_1.ProxyObservable; } });
var setter_observer_js_1 = require("./observation/setter-observer.js");
Object.defineProperty(exports, "SetterObserver", { enumerable: true, get: function () { return setter_observer_js_1.SetterObserver; } });
var signaler_js_1 = require("./observation/signaler.js");
Object.defineProperty(exports, "ISignaler", { enumerable: true, get: function () { return signaler_js_1.ISignaler; } });
var subscriber_collection_js_1 = require("./observation/subscriber-collection.js");
Object.defineProperty(exports, "SubscriberRecord", { enumerable: true, get: function () { return subscriber_collection_js_1.SubscriberRecord; } });
Object.defineProperty(exports, "subscriberCollection", { enumerable: true, get: function () { return subscriber_collection_js_1.subscriberCollection; } });
var connectable_switcher_js_1 = require("./observation/connectable-switcher.js");
Object.defineProperty(exports, "ConnectableSwitcher", { enumerable: true, get: function () { return connectable_switcher_js_1.ConnectableSwitcher; } });
var binding_behavior_js_1 = require("./binding-behavior.js");
Object.defineProperty(exports, "bindingBehavior", { enumerable: true, get: function () { return binding_behavior_js_1.bindingBehavior; } });
Object.defineProperty(exports, "BindingBehavior", { enumerable: true, get: function () { return binding_behavior_js_1.BindingBehavior; } });
Object.defineProperty(exports, "BindingBehaviorDefinition", { enumerable: true, get: function () { return binding_behavior_js_1.BindingBehaviorDefinition; } });
Object.defineProperty(exports, "BindingInterceptor", { enumerable: true, get: function () { return binding_behavior_js_1.BindingInterceptor; } });
Object.defineProperty(exports, "BindingBehaviorFactory", { enumerable: true, get: function () { return binding_behavior_js_1.BindingBehaviorFactory; } });
Object.defineProperty(exports, "BindingBehaviorStrategy", { enumerable: true, get: function () { return binding_behavior_js_1.BindingBehaviorStrategy; } });
var value_converter_js_1 = require("./value-converter.js");
Object.defineProperty(exports, "ValueConverter", { enumerable: true, get: function () { return value_converter_js_1.ValueConverter; } });
Object.defineProperty(exports, "ValueConverterDefinition", { enumerable: true, get: function () { return value_converter_js_1.ValueConverterDefinition; } });
Object.defineProperty(exports, "valueConverter", { enumerable: true, get: function () { return value_converter_js_1.valueConverter; } });
var observation_js_2 = require("./observation.js");
Object.defineProperty(exports, "BindingMode", { enumerable: true, get: function () { return observation_js_2.BindingMode; } });
Object.defineProperty(exports, "LifecycleFlags", { enumerable: true, get: function () { return observation_js_2.LifecycleFlags; } });
Object.defineProperty(exports, "AccessorType", { enumerable: true, get: function () { return observation_js_2.AccessorType; } });
Object.defineProperty(exports, "CollectionKind", { enumerable: true, get: function () { return observation_js_2.CollectionKind; } });
Object.defineProperty(exports, "DelegationStrategy", { enumerable: true, get: function () { return observation_js_2.DelegationStrategy; } });
Object.defineProperty(exports, "isIndexMap", { enumerable: true, get: function () { return observation_js_2.isIndexMap; } });
Object.defineProperty(exports, "copyIndexMap", { enumerable: true, get: function () { return observation_js_2.copyIndexMap; } });
Object.defineProperty(exports, "cloneIndexMap", { enumerable: true, get: function () { return observation_js_2.cloneIndexMap; } });
Object.defineProperty(exports, "createIndexMap", { enumerable: true, get: function () { return observation_js_2.createIndexMap; } });
//# sourceMappingURL=index.js.map