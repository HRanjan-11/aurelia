Object.defineProperty(exports,"__esModule",{value:!0});class t{constructor(t,e,n){this.path=t,this.caseSensitive=e,this.handler=n}}class e{constructor(t,e){this.route=t,this.paramNames=e}}class n{constructor(t,e){this.endpoint=t,this.params=e}}class s{constructor(t,e,n,s){var i;this.chars=t,this.states=e,this.skippedStates=n,this.result=s,this.head=e[e.length-1],this.endpoint=null===(i=this.head)||void 0===i?void 0:i.endpoint}advance(t){const{chars:e,states:n,skippedStates:i,result:a}=this;let o=null,r=0;const l=n[n.length-1];function h(c,u){if(c.isMatch(t)&&(1==++r?o=c:a.add(new s(e.concat(t),n.concat(c),null===u?i:i.concat(u),a))),null===l.segment&&c.isOptional&&null!==c.nextStates){if(c.nextStates.length>1)throw new Error(`${c.nextStates.length} nextStates`);const t=c.nextStates[0];if(!t.isSeparator)throw new Error("Not a separator");if(null!==t.nextStates)for(const e of t.nextStates)h(e,c)}}if(l.isDynamic&&h(l,null),null!==l.nextStates)for(const t of l.nextStates)h(t,null);null!==o&&(n.push(this.head=o),e.push(t),null!==o.endpoint&&(this.endpoint=o.endpoint)),0===r&&a.remove(this)}finalize(){!function t(e,n){const s=n.nextStates;if(null!==s)if(1===s.length&&null===s[0].segment)t(e,s[0]);else for(const n of s)if(n.isOptional&&null!==n.endpoint){if(e.push(n),null!==n.nextStates)for(const s of n.nextStates)t(e,s);break}}(this.skippedStates,this.head)}getParams(){const{states:t,chars:e,endpoint:n}=this,s={};for(const t of n.paramNames)s[t]=void 0;for(let n=0,i=t.length;n<i;++n){const i=t[n];if(i.isDynamic){const t=i.segment.name;void 0===s[t]?s[t]=e[n]:s[t]+=e[n]}}return s}compareTo(t){const e=this.states,n=t.states;for(let t=0,s=0,i=Math.max(e.length,n.length);t<i;++t){let i=e[t];if(void 0===i)return 1;let a=n[s];if(void 0===a)return-1;let o=i.segment,r=a.segment;if(null===o){if(null===r){++s;continue}if(void 0===(i=e[++t]))return 1;o=i.segment}else if(null===r){if(void 0===(a=n[++s]))return-1;r=a.segment}if(o.kind<r.kind)return 1;if(o.kind>r.kind)return-1;++s}const s=this.skippedStates,i=t.skippedStates,a=s.length,o=i.length;if(a<o)return 1;if(a>o)return-1;for(let t=0;t<a;++t){const e=s[t],n=i[t];if(e.length<n.length)return 1;if(e.length>n.length)return-1}return 0}}function i(t){return null!==t.head.endpoint}function a(t,e){return t.compareTo(e)}class o{constructor(t){this.candidates=[],this.candidates=[new s([""],[t],[],this)]}get isEmpty(){return 0===this.candidates.length}getSolution(){const t=this.candidates.filter(i);if(0===t.length)return null;for(const e of t)e.finalize();return t.sort(a),t[0]}add(t){this.candidates.push(t)}remove(t){this.candidates.splice(this.candidates.indexOf(t),1)}advance(t){const e=this.candidates.slice();for(const n of e)n.advance(t)}}class r{constructor(t,e,n){switch(this.prevState=t,this.segment=e,this.value=n,this.nextStates=null,this.endpoint=null,null==e?void 0:e.kind){case 2:this.length=t.length+1,this.isSeparator=!1,this.isDynamic=!0,this.isOptional=e.optional;break;case 1:this.length=t.length+1,this.isSeparator=!1,this.isDynamic=!0,this.isOptional=!1;break;case 3:this.length=t.length+1,this.isSeparator=!1,this.isDynamic=!1,this.isOptional=!1;break;case void 0:this.length=null===t?0:t.length,this.isSeparator=!0,this.isDynamic=!1,this.isOptional=!1}}append(t,e){let n,s=this.nextStates;return null===s?(n=void 0,s=this.nextStates=[]):n=s.find(null===t?t=>t.value===e:e=>{var n;return null===(n=e.segment)||void 0===n?void 0:n.equals(t)}),void 0===n&&s.push(n=new r(this,t,e)),n}setEndpoint(t){if(null!==this.endpoint)throw new Error(`Cannot add ambiguous route. The pattern '${t.route.path}' clashes with '${this.endpoint.route.path}'`);this.endpoint=t,this.isOptional&&(this.prevState.setEndpoint(t),this.prevState.isSeparator&&null!==this.prevState.prevState&&this.prevState.prevState.setEndpoint(t))}isMatch(t){const e=this.segment;switch(null==e?void 0:e.kind){case 2:return!this.value.includes(t);case 1:return!0;case 3:case void 0:return this.value.includes(t)}}}function l(t){return t.length>0}var h;!function(t){t[t.star=1]="star",t[t.dynamic=2]="dynamic",t[t.static=3]="static"}(h||(h={}));class c{constructor(t,e){this.value=t,this.caseSensitive=e}get kind(){return 3}appendTo(t){const{value:e,value:{length:n}}=this;if(this.caseSensitive)for(let s=0;s<n;++s)t=t.append(this,e.charAt(s));else for(let s=0;s<n;++s){const n=e.charAt(s);t=t.append(this,n.toUpperCase()+n.toLowerCase())}return t}equals(t){return 3===t.kind&&t.caseSensitive===this.caseSensitive&&t.value===this.value}}class u{constructor(t,e){this.name=t,this.optional=e}get kind(){return 2}appendTo(t){return t=t.append(this,"/")}equals(t){return 2===t.kind&&t.optional===this.optional&&t.name===this.name}}class d{constructor(t){this.name=t}get kind(){return 1}appendTo(t){return t=t.append(this,"")}equals(t){return 1===t.kind&&t.name===this.name}}exports.ConfigurableRoute=t,exports.Endpoint=e,exports.RecognizedRoute=n,exports.RouteRecognizer=class{constructor(){this.rootState=new r(null,null,""),this.cache=new Map}add(t){if(t instanceof Array)for(const e of t)this.$add(e);else this.$add(t);this.cache.clear()}$add(n){const s=n.path,i=new t(n.path,!0===n.caseSensitive,n.handler),a=""===s?[""]:s.split("/").filter(l),o=[];let r=this.rootState;for(const t of a)switch(r=r.append(null,"/"),t.charAt(0)){case":":{const e=t.endsWith("?"),n=e?t.slice(1,-1):t.slice(1);o.push(n),r=new u(n,e).appendTo(r);break}case"*":{const e=t.slice(1);o.push(e),r=new d(e).appendTo(r);break}default:r=new c(t,i.caseSensitive).appendTo(r)}const h=new e(i,o);r.setEndpoint(h)}recognize(t){let e=this.cache.get(t);return void 0===e&&this.cache.set(t,e=this.$recognize(t)),e}$recognize(t){(t=decodeURI(t)).startsWith("/")||(t=`/${t}`),t.length>1&&t.endsWith("/")&&(t=t.slice(0,-1));const e=new o(this.rootState);for(let n=0,s=t.length;n<s;++n){const s=t.charAt(n);if(e.advance(s),e.isEmpty)return null}const s=e.getSolution();if(null===s)return null;const{endpoint:i}=s,a=s.getParams();return new n(i,a)}};
